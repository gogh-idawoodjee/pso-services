<?php
/* @noinspection ALL */
// @formatter:off
// phpcs:ignoreFile

namespace PHPSTORM_META {

   /**
    * PhpStorm Meta file, to provide autocomplete information for PhpStorm
    *
    * @author Barry vd. Heuvel <barryvdh@gmail.com>
    * @see https://github.com/barryvdh/laravel-ide-helper
    */
    override(new \Illuminate\Contracts\Container\Container, map([
        '' => '@',
            'GoogleMaps' => \GoogleMaps\GoogleMaps::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\NullBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \Illuminate\Foundation\Exceptions\Handler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'PhpParser\PrettyPrinter' => \PhpParser\PrettyPrinter\Standard::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'geocoder' => \Spatie\Geocoder\Geocoder::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'shortcode' => \App\Helpers\ShortCodeGenerator::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Container\Container::makeWith(0), map([
        '' => '@',
            'GoogleMaps' => \GoogleMaps\GoogleMaps::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\NullBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \Illuminate\Foundation\Exceptions\Handler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'PhpParser\PrettyPrinter' => \PhpParser\PrettyPrinter\Standard::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'geocoder' => \Spatie\Geocoder\Geocoder::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'shortcode' => \App\Helpers\ShortCodeGenerator::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::get(0), map([
        '' => '@',
            'GoogleMaps' => \GoogleMaps\GoogleMaps::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\NullBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \Illuminate\Foundation\Exceptions\Handler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'PhpParser\PrettyPrinter' => \PhpParser\PrettyPrinter\Standard::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'geocoder' => \Spatie\Geocoder\Geocoder::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'shortcode' => \App\Helpers\ShortCodeGenerator::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::make(0), map([
        '' => '@',
            'GoogleMaps' => \GoogleMaps\GoogleMaps::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\NullBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \Illuminate\Foundation\Exceptions\Handler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'PhpParser\PrettyPrinter' => \PhpParser\PrettyPrinter\Standard::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'geocoder' => \Spatie\Geocoder\Geocoder::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'shortcode' => \App\Helpers\ShortCodeGenerator::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Illuminate\Contracts\Container\Container::makeWith(0), map([
        '' => '@',
            'GoogleMaps' => \GoogleMaps\GoogleMaps::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\NullBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \Illuminate\Foundation\Exceptions\Handler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'PhpParser\PrettyPrinter' => \PhpParser\PrettyPrinter\Standard::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'geocoder' => \Spatie\Geocoder\Geocoder::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'shortcode' => \App\Helpers\ShortCodeGenerator::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::get(0), map([
        '' => '@',
            'GoogleMaps' => \GoogleMaps\GoogleMaps::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\NullBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \Illuminate\Foundation\Exceptions\Handler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'PhpParser\PrettyPrinter' => \PhpParser\PrettyPrinter\Standard::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'geocoder' => \Spatie\Geocoder\Geocoder::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'shortcode' => \App\Helpers\ShortCodeGenerator::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::make(0), map([
        '' => '@',
            'GoogleMaps' => \GoogleMaps\GoogleMaps::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\NullBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \Illuminate\Foundation\Exceptions\Handler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'PhpParser\PrettyPrinter' => \PhpParser\PrettyPrinter\Standard::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'geocoder' => \Spatie\Geocoder\Geocoder::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'shortcode' => \App\Helpers\ShortCodeGenerator::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\App::makeWith(0), map([
        '' => '@',
            'GoogleMaps' => \GoogleMaps\GoogleMaps::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\NullBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \Illuminate\Foundation\Exceptions\Handler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'PhpParser\PrettyPrinter' => \PhpParser\PrettyPrinter\Standard::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'geocoder' => \Spatie\Geocoder\Geocoder::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'shortcode' => \App\Helpers\ShortCodeGenerator::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\app(0), map([
        '' => '@',
            'GoogleMaps' => \GoogleMaps\GoogleMaps::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\NullBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \Illuminate\Foundation\Exceptions\Handler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'PhpParser\PrettyPrinter' => \PhpParser\PrettyPrinter\Standard::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'geocoder' => \Spatie\Geocoder\Geocoder::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'shortcode' => \App\Helpers\ShortCodeGenerator::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\resolve(0), map([
        '' => '@',
            'GoogleMaps' => \GoogleMaps\GoogleMaps::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\NullBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \Illuminate\Foundation\Exceptions\Handler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'PhpParser\PrettyPrinter' => \PhpParser\PrettyPrinter\Standard::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'geocoder' => \Spatie\Geocoder\Geocoder::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'shortcode' => \App\Helpers\ShortCodeGenerator::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));
    override(\Psr\Container\ContainerInterface::get(0), map([
        '' => '@',
            'GoogleMaps' => \GoogleMaps\GoogleMaps::class,
            'Illuminate\Bus\BatchRepository' => \Illuminate\Bus\DatabaseBatchRepository::class,
            'Illuminate\Contracts\Auth\Access\Gate' => \Illuminate\Auth\Access\Gate::class,
            'Illuminate\Contracts\Broadcasting\Broadcaster' => \Illuminate\Broadcasting\Broadcasters\NullBroadcaster::class,
            'Illuminate\Contracts\Console\Kernel' => \Illuminate\Foundation\Console\Kernel::class,
            'Illuminate\Contracts\Debug\ExceptionHandler' => \Illuminate\Foundation\Exceptions\Handler::class,
            'Illuminate\Contracts\Foundation\MaintenanceMode' => \Illuminate\Foundation\FileBasedMaintenanceMode::class,
            'Illuminate\Contracts\Http\Kernel' => \Illuminate\Foundation\Http\Kernel::class,
            'Illuminate\Contracts\Log\ContextLogProcessor' => \Illuminate\Log\Context\ContextLogProcessor::class,
            'Illuminate\Contracts\Pipeline\Hub' => \Illuminate\Pipeline\Hub::class,
            'Illuminate\Contracts\Queue\EntityResolver' => \Illuminate\Database\Eloquent\QueueEntityResolver::class,
            'Illuminate\Contracts\Routing\ResponseFactory' => \Illuminate\Routing\ResponseFactory::class,
            'Illuminate\Contracts\Validation\UncompromisedVerifier' => \Illuminate\Validation\NotPwnedVerifier::class,
            'Illuminate\Routing\Contracts\CallableDispatcher' => \Illuminate\Routing\CallableDispatcher::class,
            'Illuminate\Routing\Contracts\ControllerDispatcher' => \Illuminate\Routing\ControllerDispatcher::class,
            'PhpParser\PrettyPrinter' => \PhpParser\PrettyPrinter\Standard::class,
            'auth' => \Illuminate\Auth\AuthManager::class,
            'auth.driver' => \Illuminate\Auth\SessionGuard::class,
            'auth.password' => \Illuminate\Auth\Passwords\PasswordBrokerManager::class,
            'auth.password.broker' => \Illuminate\Auth\Passwords\PasswordBroker::class,
            'blade.compiler' => \Illuminate\View\Compilers\BladeCompiler::class,
            'cache' => \Illuminate\Cache\CacheManager::class,
            'cache.store' => \Illuminate\Cache\Repository::class,
            'command.tinker' => \Laravel\Tinker\Console\TinkerCommand::class,
            'composer' => \Illuminate\Support\Composer::class,
            'cookie' => \Illuminate\Cookie\CookieJar::class,
            'db' => \Illuminate\Database\DatabaseManager::class,
            'db.connection' => \Illuminate\Database\MySqlConnection::class,
            'db.factory' => \Illuminate\Database\Connectors\ConnectionFactory::class,
            'db.schema' => \Illuminate\Database\Schema\MySqlBuilder::class,
            'db.transactions' => \Illuminate\Database\DatabaseTransactionsManager::class,
            'encrypter' => \Illuminate\Encryption\Encrypter::class,
            'events' => \Illuminate\Events\Dispatcher::class,
            'files' => \Illuminate\Filesystem\Filesystem::class,
            'filesystem' => \Illuminate\Filesystem\FilesystemManager::class,
            'filesystem.cloud' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'filesystem.disk' => \Illuminate\Filesystem\LocalFilesystemAdapter::class,
            'geocoder' => \Spatie\Geocoder\Geocoder::class,
            'hash' => \Illuminate\Hashing\HashManager::class,
            'hash.driver' => \Illuminate\Hashing\BcryptHasher::class,
            'log' => \Illuminate\Log\LogManager::class,
            'mail.manager' => \Illuminate\Mail\MailManager::class,
            'mailer' => \Illuminate\Mail\Mailer::class,
            'memcached.connector' => \Illuminate\Cache\MemcachedConnector::class,
            'migration.creator' => \Illuminate\Database\Migrations\MigrationCreator::class,
            'migration.repository' => \Illuminate\Database\Migrations\DatabaseMigrationRepository::class,
            'migrator' => \Illuminate\Database\Migrations\Migrator::class,
            'pipeline' => \Illuminate\Pipeline\Pipeline::class,
            'queue' => \Illuminate\Queue\QueueManager::class,
            'queue.connection' => \Illuminate\Queue\DatabaseQueue::class,
            'queue.failer' => \Illuminate\Queue\Failed\DatabaseUuidFailedJobProvider::class,
            'queue.listener' => \Illuminate\Queue\Listener::class,
            'queue.worker' => \Illuminate\Queue\Worker::class,
            'redirect' => \Illuminate\Routing\Redirector::class,
            'redis' => \Illuminate\Redis\RedisManager::class,
            'router' => \Illuminate\Routing\Router::class,
            'session' => \Illuminate\Session\SessionManager::class,
            'session.store' => \Illuminate\Session\Store::class,
            'shortcode' => \App\Helpers\ShortCodeGenerator::class,
            'translation.loader' => \Illuminate\Translation\FileLoader::class,
            'translator' => \Illuminate\Translation\Translator::class,
            'url' => \Illuminate\Routing\UrlGenerator::class,
            'validation.presence' => \Illuminate\Validation\DatabasePresenceVerifier::class,
            'view' => \Illuminate\View\Factory::class,
            'view.engine.resolver' => \Illuminate\View\Engines\EngineResolver::class,
            'view.finder' => \Illuminate\View\FileViewFinder::class,
        ]));

    override(\auth()->user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Contracts\Auth\Guard::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Support\Facades\Auth::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\request()->user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Http\Request::user(), map([
        '' => \App\Models\User::class,
    ]));
    override(\Illuminate\Support\Facades\Request::user(), map([
        '' => \App\Models\User::class,
    ]));

    override(\config(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.api.driver' => 'string',
            'auth.guards.api.provider' => 'string',
            'auth.guards.sanctum.driver' => 'string',
            'auth.guards.sanctum.provider' => 'NULL',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'backup.backup.name' => 'string',
            'backup.backup.source.files.include' => 'array',
            'backup.backup.source.files.exclude' => 'array',
            'backup.backup.source.files.follow_links' => 'boolean',
            'backup.backup.source.files.ignore_unreadable_directories' => 'boolean',
            'backup.backup.source.files.relative_path' => 'NULL',
            'backup.backup.source.databases' => 'array',
            'backup.backup.database_dump_compressor' => 'NULL',
            'backup.backup.database_dump_file_extension' => 'string',
            'backup.backup.destination.filename_prefix' => 'string',
            'backup.backup.destination.disks' => 'array',
            'backup.backup.temporary_directory' => 'string',
            'backup.backup.password' => 'NULL',
            'backup.backup.encryption' => 'string',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\BackupHasFailedNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\UnhealthyBackupWasFoundNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\CleanupHasFailedNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\BackupWasSuccessfulNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\HealthyBackupWasFoundNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\CleanupWasSuccessfulNotification' => 'array',
            'backup.notifications.notifiable' => 'string',
            'backup.notifications.mail.to' => 'string',
            'backup.notifications.mail.from.address' => 'string',
            'backup.notifications.mail.from.name' => 'string',
            'backup.notifications.slack.webhook_url' => 'string',
            'backup.notifications.slack.channel' => 'NULL',
            'backup.notifications.slack.username' => 'NULL',
            'backup.notifications.slack.icon' => 'NULL',
            'backup.notifications.discord.webhook_url' => 'string',
            'backup.notifications.discord.username' => 'string',
            'backup.notifications.discord.avatar_url' => 'string',
            'backup.monitor_backups.0.name' => 'string',
            'backup.monitor_backups.0.disks' => 'array',
            'backup.monitor_backups.0.health_checks.Spatie\Backup\Tasks\Monitor\HealthChecks\MaximumAgeInDays' => 'integer',
            'backup.monitor_backups.0.health_checks.Spatie\Backup\Tasks\Monitor\HealthChecks\MaximumStorageInMegabytes' => 'integer',
            'backup.cleanup.strategy' => 'string',
            'backup.cleanup.default_strategy.keep_all_backups_for_days' => 'integer',
            'backup.cleanup.default_strategy.keep_daily_backups_for_days' => 'integer',
            'backup.cleanup.default_strategy.keep_weekly_backups_for_weeks' => 'integer',
            'backup.cleanup.default_strategy.keep_monthly_backups_for_months' => 'integer',
            'backup.cleanup.default_strategy.keep_yearly_backups_for_years' => 'integer',
            'backup.cleanup.default_strategy.delete_oldest_backups_when_using_more_megabytes_than' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.stores.apc.driver' => 'string',
            'cache.prefix' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.connections.krang_db.driver' => 'string',
            'database.connections.krang_db.host' => 'string',
            'database.connections.krang_db.port' => 'string',
            'database.connections.krang_db.database' => 'string',
            'database.connections.krang_db.username' => 'string',
            'database.connections.krang_db.password' => 'string',
            'database.connections.krang_db.charset' => 'string',
            'database.connections.krang_db.collation' => 'string',
            'database.connections.krang_db.prefix' => 'string',
            'database.connections.krang_db.strict' => 'boolean',
            'database.connections.krang_db.engine' => 'NULL',
            'database.migrations' => 'string',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.links.C:\Users\idawo\Herd\pso-services\public\storage' => 'string',
            'geocoder.key' => 'string',
            'geocoder.language' => 'string',
            'geocoder.region' => 'string',
            'geocoder.bounds' => 'string',
            'geocoder.country' => 'string',
            'googlemaps.key' => 'string',
            'googlemaps.ssl_verify_peer' => 'boolean',
            'googlemaps.service.geocoding.url' => 'string',
            'googlemaps.service.geocoding.type' => 'string',
            'googlemaps.service.geocoding.key' => 'NULL',
            'googlemaps.service.geocoding.endpoint' => 'boolean',
            'googlemaps.service.geocoding.responseDefaultKey' => 'string',
            'googlemaps.service.geocoding.param.address' => 'NULL',
            'googlemaps.service.geocoding.param.bounds' => 'NULL',
            'googlemaps.service.geocoding.param.key' => 'NULL',
            'googlemaps.service.geocoding.param.region' => 'NULL',
            'googlemaps.service.geocoding.param.language' => 'NULL',
            'googlemaps.service.geocoding.param.result_type' => 'NULL',
            'googlemaps.service.geocoding.param.location_type' => 'NULL',
            'googlemaps.service.geocoding.param.latlng' => 'NULL',
            'googlemaps.service.geocoding.param.place_id' => 'NULL',
            'googlemaps.service.geocoding.param.components.route' => 'NULL',
            'googlemaps.service.geocoding.param.components.locality' => 'NULL',
            'googlemaps.service.geocoding.param.components.administrative_area' => 'NULL',
            'googlemaps.service.geocoding.param.components.postal_code' => 'NULL',
            'googlemaps.service.geocoding.param.components.country' => 'NULL',
            'googlemaps.service.directions.url' => 'string',
            'googlemaps.service.directions.type' => 'string',
            'googlemaps.service.directions.key' => 'NULL',
            'googlemaps.service.directions.endpoint' => 'boolean',
            'googlemaps.service.directions.responseDefaultKey' => 'string',
            'googlemaps.service.directions.decodePolyline' => 'boolean',
            'googlemaps.service.directions.param.origin' => 'NULL',
            'googlemaps.service.directions.param.destination' => 'NULL',
            'googlemaps.service.directions.param.mode' => 'NULL',
            'googlemaps.service.directions.param.waypoints' => 'NULL',
            'googlemaps.service.directions.param.place_id' => 'NULL',
            'googlemaps.service.directions.param.alternatives' => 'NULL',
            'googlemaps.service.directions.param.avoid' => 'NULL',
            'googlemaps.service.directions.param.language' => 'NULL',
            'googlemaps.service.directions.param.units' => 'NULL',
            'googlemaps.service.directions.param.region' => 'NULL',
            'googlemaps.service.directions.param.departure_time' => 'NULL',
            'googlemaps.service.directions.param.arrival_time' => 'NULL',
            'googlemaps.service.directions.param.transit_mode' => 'NULL',
            'googlemaps.service.directions.param.transit_routing_preference' => 'NULL',
            'googlemaps.service.distancematrix.url' => 'string',
            'googlemaps.service.distancematrix.type' => 'string',
            'googlemaps.service.distancematrix.key' => 'NULL',
            'googlemaps.service.distancematrix.endpoint' => 'boolean',
            'googlemaps.service.distancematrix.responseDefaultKey' => 'string',
            'googlemaps.service.distancematrix.param.origins' => 'NULL',
            'googlemaps.service.distancematrix.param.destinations' => 'NULL',
            'googlemaps.service.distancematrix.param.key' => 'NULL',
            'googlemaps.service.distancematrix.param.mode' => 'NULL',
            'googlemaps.service.distancematrix.param.language' => 'NULL',
            'googlemaps.service.distancematrix.param.avoid' => 'NULL',
            'googlemaps.service.distancematrix.param.units' => 'NULL',
            'googlemaps.service.distancematrix.param.departure_time' => 'NULL',
            'googlemaps.service.distancematrix.param.arrival_time' => 'NULL',
            'googlemaps.service.distancematrix.param.transit_mode' => 'NULL',
            'googlemaps.service.distancematrix.param.transit_routing_preference' => 'NULL',
            'googlemaps.service.elevation.url' => 'string',
            'googlemaps.service.elevation.type' => 'string',
            'googlemaps.service.elevation.key' => 'NULL',
            'googlemaps.service.elevation.endpoint' => 'boolean',
            'googlemaps.service.elevation.responseDefaultKey' => 'string',
            'googlemaps.service.elevation.param.locations' => 'NULL',
            'googlemaps.service.elevation.param.path' => 'NULL',
            'googlemaps.service.elevation.param.samples' => 'NULL',
            'googlemaps.service.elevation.param.key' => 'NULL',
            'googlemaps.service.geolocate.url' => 'string',
            'googlemaps.service.geolocate.type' => 'string',
            'googlemaps.service.geolocate.key' => 'NULL',
            'googlemaps.service.geolocate.endpoint' => 'boolean',
            'googlemaps.service.geolocate.responseDefaultKey' => 'string',
            'googlemaps.service.geolocate.param.homeMobileCountryCode' => 'NULL',
            'googlemaps.service.geolocate.param.homeMobileNetworkCode' => 'NULL',
            'googlemaps.service.geolocate.param.radioType' => 'NULL',
            'googlemaps.service.geolocate.param.carrier' => 'NULL',
            'googlemaps.service.geolocate.param.considerIp' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.cellId' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.locationAreaCode' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.mobileCountryCode' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.mobileNetworkCode' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.age' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.signalStrength' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.timingAdvance' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.macAddress' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.signalStrength' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.age' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.channel' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.signalToNoiseRatio' => 'NULL',
            'googlemaps.service.snapToRoads.url' => 'string',
            'googlemaps.service.snapToRoads.type' => 'string',
            'googlemaps.service.snapToRoads.key' => 'NULL',
            'googlemaps.service.snapToRoads.endpoint' => 'boolean',
            'googlemaps.service.snapToRoads.responseDefaultKey' => 'string',
            'googlemaps.service.snapToRoads.param.locations' => 'NULL',
            'googlemaps.service.snapToRoads.param.path' => 'NULL',
            'googlemaps.service.snapToRoads.param.samples' => 'NULL',
            'googlemaps.service.snapToRoads.param.key' => 'NULL',
            'googlemaps.service.speedLimits.url' => 'string',
            'googlemaps.service.speedLimits.type' => 'string',
            'googlemaps.service.speedLimits.key' => 'NULL',
            'googlemaps.service.speedLimits.endpoint' => 'boolean',
            'googlemaps.service.speedLimits.responseDefaultKey' => 'string',
            'googlemaps.service.speedLimits.param.path' => 'NULL',
            'googlemaps.service.speedLimits.param.placeId' => 'NULL',
            'googlemaps.service.speedLimits.param.units' => 'NULL',
            'googlemaps.service.speedLimits.param.key' => 'NULL',
            'googlemaps.service.timezone.url' => 'string',
            'googlemaps.service.timezone.type' => 'string',
            'googlemaps.service.timezone.key' => 'NULL',
            'googlemaps.service.timezone.endpoint' => 'boolean',
            'googlemaps.service.timezone.responseDefaultKey' => 'string',
            'googlemaps.service.timezone.param.location' => 'NULL',
            'googlemaps.service.timezone.param.timestamp' => 'NULL',
            'googlemaps.service.timezone.param.key' => 'NULL',
            'googlemaps.service.timezone.param.language' => 'NULL',
            'googlemaps.service.nearbysearch.url' => 'string',
            'googlemaps.service.nearbysearch.type' => 'string',
            'googlemaps.service.nearbysearch.key' => 'NULL',
            'googlemaps.service.nearbysearch.endpoint' => 'boolean',
            'googlemaps.service.nearbysearch.responseDefaultKey' => 'string',
            'googlemaps.service.nearbysearch.param.key' => 'NULL',
            'googlemaps.service.nearbysearch.param.location' => 'NULL',
            'googlemaps.service.nearbysearch.param.radius' => 'NULL',
            'googlemaps.service.nearbysearch.param.keyword' => 'NULL',
            'googlemaps.service.nearbysearch.param.language' => 'NULL',
            'googlemaps.service.nearbysearch.param.minprice' => 'NULL',
            'googlemaps.service.nearbysearch.param.maxprice' => 'NULL',
            'googlemaps.service.nearbysearch.param.name' => 'NULL',
            'googlemaps.service.nearbysearch.param.opennow' => 'NULL',
            'googlemaps.service.nearbysearch.param.rankby' => 'NULL',
            'googlemaps.service.nearbysearch.param.type' => 'NULL',
            'googlemaps.service.nearbysearch.param.pagetoken' => 'NULL',
            'googlemaps.service.nearbysearch.param.zagatselected' => 'NULL',
            'googlemaps.service.textsearch.url' => 'string',
            'googlemaps.service.textsearch.type' => 'string',
            'googlemaps.service.textsearch.key' => 'NULL',
            'googlemaps.service.textsearch.endpoint' => 'boolean',
            'googlemaps.service.textsearch.responseDefaultKey' => 'string',
            'googlemaps.service.textsearch.param.key' => 'NULL',
            'googlemaps.service.textsearch.param.query' => 'NULL',
            'googlemaps.service.textsearch.param.location' => 'NULL',
            'googlemaps.service.textsearch.param.radius' => 'NULL',
            'googlemaps.service.textsearch.param.language' => 'NULL',
            'googlemaps.service.textsearch.param.minprice' => 'NULL',
            'googlemaps.service.textsearch.param.maxprice' => 'NULL',
            'googlemaps.service.textsearch.param.opennow' => 'NULL',
            'googlemaps.service.textsearch.param.type' => 'NULL',
            'googlemaps.service.textsearch.param.pagetoken' => 'NULL',
            'googlemaps.service.textsearch.param.zagatselected' => 'NULL',
            'googlemaps.service.radarsearch.url' => 'string',
            'googlemaps.service.radarsearch.type' => 'string',
            'googlemaps.service.radarsearch.key' => 'NULL',
            'googlemaps.service.radarsearch.endpoint' => 'boolean',
            'googlemaps.service.radarsearch.responseDefaultKey' => 'string',
            'googlemaps.service.radarsearch.param.key' => 'NULL',
            'googlemaps.service.radarsearch.param.radius' => 'NULL',
            'googlemaps.service.radarsearch.param.location' => 'NULL',
            'googlemaps.service.radarsearch.param.keyword' => 'NULL',
            'googlemaps.service.radarsearch.param.minprice' => 'NULL',
            'googlemaps.service.radarsearch.param.maxprice' => 'NULL',
            'googlemaps.service.radarsearch.param.opennow' => 'NULL',
            'googlemaps.service.radarsearch.param.name' => 'NULL',
            'googlemaps.service.radarsearch.param.type' => 'NULL',
            'googlemaps.service.radarsearch.param.zagatselected' => 'NULL',
            'googlemaps.service.placedetails.url' => 'string',
            'googlemaps.service.placedetails.type' => 'string',
            'googlemaps.service.placedetails.key' => 'NULL',
            'googlemaps.service.placedetails.endpoint' => 'boolean',
            'googlemaps.service.placedetails.responseDefaultKey' => 'string',
            'googlemaps.service.placedetails.param.key' => 'NULL',
            'googlemaps.service.placedetails.param.placeid' => 'NULL',
            'googlemaps.service.placedetails.param.extensions' => 'NULL',
            'googlemaps.service.placedetails.param.language' => 'NULL',
            'googlemaps.service.placeadd.url' => 'string',
            'googlemaps.service.placeadd.type' => 'string',
            'googlemaps.service.placeadd.key' => 'NULL',
            'googlemaps.service.placeadd.endpoint' => 'boolean',
            'googlemaps.service.placeadd.responseDefaultKey' => 'string',
            'googlemaps.service.placeadd.param.key' => 'NULL',
            'googlemaps.service.placeadd.param.accuracy' => 'NULL',
            'googlemaps.service.placeadd.param.address' => 'NULL',
            'googlemaps.service.placeadd.param.language' => 'NULL',
            'googlemaps.service.placeadd.param.location' => 'NULL',
            'googlemaps.service.placeadd.param.name' => 'NULL',
            'googlemaps.service.placeadd.param.phone_number' => 'NULL',
            'googlemaps.service.placeadd.param.types' => 'NULL',
            'googlemaps.service.placeadd.param.type' => 'NULL',
            'googlemaps.service.placeadd.param.website' => 'NULL',
            'googlemaps.service.placedelete.url' => 'string',
            'googlemaps.service.placedelete.type' => 'string',
            'googlemaps.service.placedelete.key' => 'NULL',
            'googlemaps.service.placedelete.endpoint' => 'boolean',
            'googlemaps.service.placedelete.responseDefaultKey' => 'string',
            'googlemaps.service.placedelete.param.key' => 'NULL',
            'googlemaps.service.placedelete.param.place_id' => 'NULL',
            'googlemaps.service.placephoto.url' => 'string',
            'googlemaps.service.placephoto.type' => 'string',
            'googlemaps.service.placephoto.key' => 'NULL',
            'googlemaps.service.placephoto.endpoint' => 'boolean',
            'googlemaps.service.placephoto.responseDefaultKey' => 'string',
            'googlemaps.service.placephoto.param.key' => 'NULL',
            'googlemaps.service.placephoto.param.photoreference' => 'NULL',
            'googlemaps.service.placephoto.param.maxheight' => 'NULL',
            'googlemaps.service.placephoto.param.maxwidth' => 'NULL',
            'googlemaps.service.placeautocomplete.url' => 'string',
            'googlemaps.service.placeautocomplete.type' => 'string',
            'googlemaps.service.placeautocomplete.key' => 'NULL',
            'googlemaps.service.placeautocomplete.endpoint' => 'boolean',
            'googlemaps.service.placeautocomplete.responseDefaultKey' => 'string',
            'googlemaps.service.placeautocomplete.param.key' => 'NULL',
            'googlemaps.service.placeautocomplete.param.input' => 'NULL',
            'googlemaps.service.placeautocomplete.param.offset' => 'NULL',
            'googlemaps.service.placeautocomplete.param.location' => 'NULL',
            'googlemaps.service.placeautocomplete.param.radius' => 'NULL',
            'googlemaps.service.placeautocomplete.param.language' => 'NULL',
            'googlemaps.service.placeautocomplete.param.types' => 'NULL',
            'googlemaps.service.placeautocomplete.param.type' => 'NULL',
            'googlemaps.service.placeautocomplete.param.components' => 'NULL',
            'googlemaps.service.placequeryautocomplete.url' => 'string',
            'googlemaps.service.placequeryautocomplete.type' => 'string',
            'googlemaps.service.placequeryautocomplete.key' => 'NULL',
            'googlemaps.service.placequeryautocomplete.endpoint' => 'boolean',
            'googlemaps.service.placequeryautocomplete.responseDefaultKey' => 'string',
            'googlemaps.service.placequeryautocomplete.param.key' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.input' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.offset' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.location' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.radius' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.language' => 'NULL',
            'googlemaps.endpoint.xml' => 'string',
            'googlemaps.endpoint.json' => 'string',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'integer',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.rehash_on_login' => 'boolean',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.with.stream' => 'string',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'logging.channels.nightwatch.driver' => 'string',
            'logging.channels.nightwatch.via' => 'string',
            'logging.channels.nightwatch.level' => 'string',
            'pso-services.statuses.statuses_greater_than_alloc.allocated' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.committed' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.sent' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.downloaded' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.accepted' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.travelling' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.waiting' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.onsite' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.pendingcompletion' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.visitcomplete' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.completed' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.incomplete' => 'integer',
            'pso-services.statuses.all.unallocated' => 'integer',
            'pso-services.statuses.all.allocated' => 'integer',
            'pso-services.statuses.all.committed' => 'integer',
            'pso-services.statuses.all.sent' => 'integer',
            'pso-services.statuses.all.downloaded' => 'integer',
            'pso-services.statuses.all.accepted' => 'integer',
            'pso-services.statuses.all.travelling' => 'integer',
            'pso-services.statuses.all.waiting' => 'integer',
            'pso-services.statuses.all.onsite' => 'integer',
            'pso-services.statuses.all.pendingcompletion' => 'integer',
            'pso-services.statuses.all.visitcomplete' => 'integer',
            'pso-services.statuses.all.completed' => 'integer',
            'pso-services.statuses.all.incomplete' => 'integer',
            'pso-services.statuses.commit_status' => 'string',
            'pso-services.defaults.activity.base_value' => 'integer',
            'pso-services.defaults.activity.priority' => 'integer',
            'pso-services.defaults.activity.appointment_template_duration' => 'integer',
            'pso-services.defaults.activity.class_id' => 'string',
            'pso-services.defaults.activity.split_allowed' => 'boolean',
            'pso-services.defaults.activity.appointment_booking_suffix' => 'string',
            'pso-services.defaults.resource.class_id' => 'string',
            'pso-services.defaults.process_type' => 'string',
            'pso-services.defaults.timeout' => 'integer',
            'pso-services.defaults.do_on_location_incentive' => 'integer',
            'pso-services.defaults.do_in_locality_incentive' => 'integer',
            'pso-services.defaults.timezone' => 'string',
            'pso-services.defaults.travel_broadcast_api' => 'string',
            'pso-services.defaults.travel_broadcast_timeout_minutes' => 'integer',
            'pso-services.debug.webhook_uuid' => 'string',
            'pso-services.debug.base_url' => 'string',
            'pso-services.debug.username' => 'NULL',
            'pso-services.debug.password' => 'NULL',
            'pso-services.debug.dataset_id' => 'string',
            'pso-services.debug.account_id' => 'string',
            'pso-services.debug.debug_mode_on' => 'boolean',
            'pso-services.debug.debug_timeout' => 'integer',
            'pso-services.settings.validate_object_existence' => 'boolean',
            'pso-services.settings.enable_commit_service_log' => 'boolean',
            'pso-services.settings.enable_swb_response_service_log' => 'boolean',
            'pso-services.settings.service_name' => 'string',
            'pso-services.settings.use_system_date_format' => 'boolean',
            'pso-services.settings.fix_committed_activities' => 'boolean',
            'pso-services.settings.override_commit_timestamps' => 'boolean',
            'pso-services.settings.override_commit_timestamp_value' => 'string',
            'pso-services.settings.enable_debug' => 'boolean',
            'pso-services.settings.force_appointed_check' => 'boolean',
            'pso-services.settings.use_region_as_locality' => 'boolean',
            'pso-services.settings.google_key' => 'string',
            'pso-services.settings.shared_encryption_key' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'sanctum.stateful' => 'array',
            'sanctum.guard' => 'array',
            'sanctum.expiration' => 'NULL',
            'sanctum.token_prefix' => 'string',
            'sanctum.middleware.authenticate_session' => 'string',
            'sanctum.middleware.encrypt_cookies' => 'string',
            'sanctum.middleware.validate_csrf_token' => 'string',
            'scramble.api_path' => 'string',
            'scramble.api_domain' => 'NULL',
            'scramble.export_path' => 'string',
            'scramble.info.version' => 'string',
            'scramble.info.description' => 'string',
            'scramble.ui.title' => 'string',
            'scramble.ui.theme' => 'string',
            'scramble.ui.hide_try_it' => 'boolean',
            'scramble.ui.hide_schemas' => 'boolean',
            'scramble.ui.logo' => 'string',
            'scramble.ui.try_it_credentials_policy' => 'string',
            'scramble.ui.layout' => 'string',
            'scramble.servers' => 'NULL',
            'scramble.enum_cases_description_strategy' => 'string',
            'scramble.middleware' => 'array',
            'scramble.extensions' => 'array',
            'sentry.dsn' => 'NULL',
            'sentry.release' => 'NULL',
            'sentry.environment' => 'NULL',
            'sentry.breadcrumbs.logs' => 'boolean',
            'sentry.breadcrumbs.sql_queries' => 'boolean',
            'sentry.breadcrumbs.sql_bindings' => 'boolean',
            'sentry.breadcrumbs.queue_info' => 'boolean',
            'sentry.breadcrumbs.command_info' => 'boolean',
            'sentry.tracing.queue_job_transactions' => 'boolean',
            'sentry.tracing.queue_jobs' => 'boolean',
            'sentry.tracing.sql_queries' => 'boolean',
            'sentry.tracing.sql_origin' => 'boolean',
            'sentry.tracing.views' => 'boolean',
            'sentry.tracing.default_integrations' => 'boolean',
            'sentry.tracing.missing_routes' => 'boolean',
            'sentry.send_default_pii' => 'boolean',
            'sentry.traces_sample_rate' => 'double',
            'services.postmark.token' => 'NULL',
            'services.resend.key' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'services.mailgun.domain' => 'NULL',
            'services.mailgun.secret' => 'NULL',
            'services.mailgun.endpoint' => 'string',
            'services.mailgun.scheme' => 'string',
            'session.driver' => 'string',
            'session.lifetime' => 'string',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'telescope.domain' => 'NULL',
            'telescope.path' => 'string',
            'telescope.driver' => 'string',
            'telescope.storage.database.connection' => 'string',
            'telescope.storage.database.chunk' => 'integer',
            'telescope.enabled' => 'boolean',
            'telescope.middleware' => 'array',
            'telescope.only_paths' => 'array',
            'telescope.ignore_paths' => 'array',
            'telescope.ignore_commands' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\BatchWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CacheWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CacheWatcher.hidden' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ClientRequestWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CommandWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CommandWatcher.ignore' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\DumpWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\DumpWatcher.always' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\EventWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\EventWatcher.ignore' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ExceptionWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\GateWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\GateWatcher.ignore_abilities' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\GateWatcher.ignore_packages' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\JobWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\LogWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\MailWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\ModelWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\ModelWatcher.events' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ModelWatcher.hydrations' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\NotificationWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\QueryWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\QueryWatcher.ignore_packages' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\QueryWatcher.slow' => 'integer',
            'telescope.watchers.Laravel\Telescope\Watchers\RedisWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.size_limit' => 'integer',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.ignore_http_methods' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.ignore_status_codes' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ScheduleWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\ViewWatcher' => 'boolean',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'string',
            'broadcasting.connections.pusher.secret' => 'string',
            'broadcasting.connections.pusher.app_id' => 'string',
            'broadcasting.connections.pusher.options.cluster' => 'string',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'string',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.failover.retry_after' => 'integer',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.mailers.roundrobin.retry_after' => 'integer',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'nightwatch.enabled' => 'boolean',
            'nightwatch.token' => 'NULL',
            'nightwatch.deployment' => 'NULL',
            'nightwatch.server' => 'string',
            'nightwatch.sampling.requests' => 'double',
            'nightwatch.sampling.commands' => 'double',
            'nightwatch.sampling.exceptions' => 'double',
            'nightwatch.filtering.ignore_cache_events' => 'boolean',
            'nightwatch.filtering.ignore_mail' => 'boolean',
            'nightwatch.filtering.ignore_notifications' => 'boolean',
            'nightwatch.filtering.ignore_outgoing_requests' => 'boolean',
            'nightwatch.filtering.ignore_queries' => 'boolean',
            'nightwatch.filtering.log_level' => 'string',
            'nightwatch.ingest.uri' => 'string',
            'nightwatch.ingest.timeout' => 'double',
            'nightwatch.ingest.connection_timeout' => 'double',
            'nightwatch.ingest.event_buffer' => 'integer',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'array',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));
    override(\Illuminate\Config\Repository::get(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.api.driver' => 'string',
            'auth.guards.api.provider' => 'string',
            'auth.guards.sanctum.driver' => 'string',
            'auth.guards.sanctum.provider' => 'NULL',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'backup.backup.name' => 'string',
            'backup.backup.source.files.include' => 'array',
            'backup.backup.source.files.exclude' => 'array',
            'backup.backup.source.files.follow_links' => 'boolean',
            'backup.backup.source.files.ignore_unreadable_directories' => 'boolean',
            'backup.backup.source.files.relative_path' => 'NULL',
            'backup.backup.source.databases' => 'array',
            'backup.backup.database_dump_compressor' => 'NULL',
            'backup.backup.database_dump_file_extension' => 'string',
            'backup.backup.destination.filename_prefix' => 'string',
            'backup.backup.destination.disks' => 'array',
            'backup.backup.temporary_directory' => 'string',
            'backup.backup.password' => 'NULL',
            'backup.backup.encryption' => 'string',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\BackupHasFailedNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\UnhealthyBackupWasFoundNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\CleanupHasFailedNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\BackupWasSuccessfulNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\HealthyBackupWasFoundNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\CleanupWasSuccessfulNotification' => 'array',
            'backup.notifications.notifiable' => 'string',
            'backup.notifications.mail.to' => 'string',
            'backup.notifications.mail.from.address' => 'string',
            'backup.notifications.mail.from.name' => 'string',
            'backup.notifications.slack.webhook_url' => 'string',
            'backup.notifications.slack.channel' => 'NULL',
            'backup.notifications.slack.username' => 'NULL',
            'backup.notifications.slack.icon' => 'NULL',
            'backup.notifications.discord.webhook_url' => 'string',
            'backup.notifications.discord.username' => 'string',
            'backup.notifications.discord.avatar_url' => 'string',
            'backup.monitor_backups.0.name' => 'string',
            'backup.monitor_backups.0.disks' => 'array',
            'backup.monitor_backups.0.health_checks.Spatie\Backup\Tasks\Monitor\HealthChecks\MaximumAgeInDays' => 'integer',
            'backup.monitor_backups.0.health_checks.Spatie\Backup\Tasks\Monitor\HealthChecks\MaximumStorageInMegabytes' => 'integer',
            'backup.cleanup.strategy' => 'string',
            'backup.cleanup.default_strategy.keep_all_backups_for_days' => 'integer',
            'backup.cleanup.default_strategy.keep_daily_backups_for_days' => 'integer',
            'backup.cleanup.default_strategy.keep_weekly_backups_for_weeks' => 'integer',
            'backup.cleanup.default_strategy.keep_monthly_backups_for_months' => 'integer',
            'backup.cleanup.default_strategy.keep_yearly_backups_for_years' => 'integer',
            'backup.cleanup.default_strategy.delete_oldest_backups_when_using_more_megabytes_than' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.stores.apc.driver' => 'string',
            'cache.prefix' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.connections.krang_db.driver' => 'string',
            'database.connections.krang_db.host' => 'string',
            'database.connections.krang_db.port' => 'string',
            'database.connections.krang_db.database' => 'string',
            'database.connections.krang_db.username' => 'string',
            'database.connections.krang_db.password' => 'string',
            'database.connections.krang_db.charset' => 'string',
            'database.connections.krang_db.collation' => 'string',
            'database.connections.krang_db.prefix' => 'string',
            'database.connections.krang_db.strict' => 'boolean',
            'database.connections.krang_db.engine' => 'NULL',
            'database.migrations' => 'string',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.links.C:\Users\idawo\Herd\pso-services\public\storage' => 'string',
            'geocoder.key' => 'string',
            'geocoder.language' => 'string',
            'geocoder.region' => 'string',
            'geocoder.bounds' => 'string',
            'geocoder.country' => 'string',
            'googlemaps.key' => 'string',
            'googlemaps.ssl_verify_peer' => 'boolean',
            'googlemaps.service.geocoding.url' => 'string',
            'googlemaps.service.geocoding.type' => 'string',
            'googlemaps.service.geocoding.key' => 'NULL',
            'googlemaps.service.geocoding.endpoint' => 'boolean',
            'googlemaps.service.geocoding.responseDefaultKey' => 'string',
            'googlemaps.service.geocoding.param.address' => 'NULL',
            'googlemaps.service.geocoding.param.bounds' => 'NULL',
            'googlemaps.service.geocoding.param.key' => 'NULL',
            'googlemaps.service.geocoding.param.region' => 'NULL',
            'googlemaps.service.geocoding.param.language' => 'NULL',
            'googlemaps.service.geocoding.param.result_type' => 'NULL',
            'googlemaps.service.geocoding.param.location_type' => 'NULL',
            'googlemaps.service.geocoding.param.latlng' => 'NULL',
            'googlemaps.service.geocoding.param.place_id' => 'NULL',
            'googlemaps.service.geocoding.param.components.route' => 'NULL',
            'googlemaps.service.geocoding.param.components.locality' => 'NULL',
            'googlemaps.service.geocoding.param.components.administrative_area' => 'NULL',
            'googlemaps.service.geocoding.param.components.postal_code' => 'NULL',
            'googlemaps.service.geocoding.param.components.country' => 'NULL',
            'googlemaps.service.directions.url' => 'string',
            'googlemaps.service.directions.type' => 'string',
            'googlemaps.service.directions.key' => 'NULL',
            'googlemaps.service.directions.endpoint' => 'boolean',
            'googlemaps.service.directions.responseDefaultKey' => 'string',
            'googlemaps.service.directions.decodePolyline' => 'boolean',
            'googlemaps.service.directions.param.origin' => 'NULL',
            'googlemaps.service.directions.param.destination' => 'NULL',
            'googlemaps.service.directions.param.mode' => 'NULL',
            'googlemaps.service.directions.param.waypoints' => 'NULL',
            'googlemaps.service.directions.param.place_id' => 'NULL',
            'googlemaps.service.directions.param.alternatives' => 'NULL',
            'googlemaps.service.directions.param.avoid' => 'NULL',
            'googlemaps.service.directions.param.language' => 'NULL',
            'googlemaps.service.directions.param.units' => 'NULL',
            'googlemaps.service.directions.param.region' => 'NULL',
            'googlemaps.service.directions.param.departure_time' => 'NULL',
            'googlemaps.service.directions.param.arrival_time' => 'NULL',
            'googlemaps.service.directions.param.transit_mode' => 'NULL',
            'googlemaps.service.directions.param.transit_routing_preference' => 'NULL',
            'googlemaps.service.distancematrix.url' => 'string',
            'googlemaps.service.distancematrix.type' => 'string',
            'googlemaps.service.distancematrix.key' => 'NULL',
            'googlemaps.service.distancematrix.endpoint' => 'boolean',
            'googlemaps.service.distancematrix.responseDefaultKey' => 'string',
            'googlemaps.service.distancematrix.param.origins' => 'NULL',
            'googlemaps.service.distancematrix.param.destinations' => 'NULL',
            'googlemaps.service.distancematrix.param.key' => 'NULL',
            'googlemaps.service.distancematrix.param.mode' => 'NULL',
            'googlemaps.service.distancematrix.param.language' => 'NULL',
            'googlemaps.service.distancematrix.param.avoid' => 'NULL',
            'googlemaps.service.distancematrix.param.units' => 'NULL',
            'googlemaps.service.distancematrix.param.departure_time' => 'NULL',
            'googlemaps.service.distancematrix.param.arrival_time' => 'NULL',
            'googlemaps.service.distancematrix.param.transit_mode' => 'NULL',
            'googlemaps.service.distancematrix.param.transit_routing_preference' => 'NULL',
            'googlemaps.service.elevation.url' => 'string',
            'googlemaps.service.elevation.type' => 'string',
            'googlemaps.service.elevation.key' => 'NULL',
            'googlemaps.service.elevation.endpoint' => 'boolean',
            'googlemaps.service.elevation.responseDefaultKey' => 'string',
            'googlemaps.service.elevation.param.locations' => 'NULL',
            'googlemaps.service.elevation.param.path' => 'NULL',
            'googlemaps.service.elevation.param.samples' => 'NULL',
            'googlemaps.service.elevation.param.key' => 'NULL',
            'googlemaps.service.geolocate.url' => 'string',
            'googlemaps.service.geolocate.type' => 'string',
            'googlemaps.service.geolocate.key' => 'NULL',
            'googlemaps.service.geolocate.endpoint' => 'boolean',
            'googlemaps.service.geolocate.responseDefaultKey' => 'string',
            'googlemaps.service.geolocate.param.homeMobileCountryCode' => 'NULL',
            'googlemaps.service.geolocate.param.homeMobileNetworkCode' => 'NULL',
            'googlemaps.service.geolocate.param.radioType' => 'NULL',
            'googlemaps.service.geolocate.param.carrier' => 'NULL',
            'googlemaps.service.geolocate.param.considerIp' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.cellId' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.locationAreaCode' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.mobileCountryCode' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.mobileNetworkCode' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.age' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.signalStrength' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.timingAdvance' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.macAddress' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.signalStrength' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.age' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.channel' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.signalToNoiseRatio' => 'NULL',
            'googlemaps.service.snapToRoads.url' => 'string',
            'googlemaps.service.snapToRoads.type' => 'string',
            'googlemaps.service.snapToRoads.key' => 'NULL',
            'googlemaps.service.snapToRoads.endpoint' => 'boolean',
            'googlemaps.service.snapToRoads.responseDefaultKey' => 'string',
            'googlemaps.service.snapToRoads.param.locations' => 'NULL',
            'googlemaps.service.snapToRoads.param.path' => 'NULL',
            'googlemaps.service.snapToRoads.param.samples' => 'NULL',
            'googlemaps.service.snapToRoads.param.key' => 'NULL',
            'googlemaps.service.speedLimits.url' => 'string',
            'googlemaps.service.speedLimits.type' => 'string',
            'googlemaps.service.speedLimits.key' => 'NULL',
            'googlemaps.service.speedLimits.endpoint' => 'boolean',
            'googlemaps.service.speedLimits.responseDefaultKey' => 'string',
            'googlemaps.service.speedLimits.param.path' => 'NULL',
            'googlemaps.service.speedLimits.param.placeId' => 'NULL',
            'googlemaps.service.speedLimits.param.units' => 'NULL',
            'googlemaps.service.speedLimits.param.key' => 'NULL',
            'googlemaps.service.timezone.url' => 'string',
            'googlemaps.service.timezone.type' => 'string',
            'googlemaps.service.timezone.key' => 'NULL',
            'googlemaps.service.timezone.endpoint' => 'boolean',
            'googlemaps.service.timezone.responseDefaultKey' => 'string',
            'googlemaps.service.timezone.param.location' => 'NULL',
            'googlemaps.service.timezone.param.timestamp' => 'NULL',
            'googlemaps.service.timezone.param.key' => 'NULL',
            'googlemaps.service.timezone.param.language' => 'NULL',
            'googlemaps.service.nearbysearch.url' => 'string',
            'googlemaps.service.nearbysearch.type' => 'string',
            'googlemaps.service.nearbysearch.key' => 'NULL',
            'googlemaps.service.nearbysearch.endpoint' => 'boolean',
            'googlemaps.service.nearbysearch.responseDefaultKey' => 'string',
            'googlemaps.service.nearbysearch.param.key' => 'NULL',
            'googlemaps.service.nearbysearch.param.location' => 'NULL',
            'googlemaps.service.nearbysearch.param.radius' => 'NULL',
            'googlemaps.service.nearbysearch.param.keyword' => 'NULL',
            'googlemaps.service.nearbysearch.param.language' => 'NULL',
            'googlemaps.service.nearbysearch.param.minprice' => 'NULL',
            'googlemaps.service.nearbysearch.param.maxprice' => 'NULL',
            'googlemaps.service.nearbysearch.param.name' => 'NULL',
            'googlemaps.service.nearbysearch.param.opennow' => 'NULL',
            'googlemaps.service.nearbysearch.param.rankby' => 'NULL',
            'googlemaps.service.nearbysearch.param.type' => 'NULL',
            'googlemaps.service.nearbysearch.param.pagetoken' => 'NULL',
            'googlemaps.service.nearbysearch.param.zagatselected' => 'NULL',
            'googlemaps.service.textsearch.url' => 'string',
            'googlemaps.service.textsearch.type' => 'string',
            'googlemaps.service.textsearch.key' => 'NULL',
            'googlemaps.service.textsearch.endpoint' => 'boolean',
            'googlemaps.service.textsearch.responseDefaultKey' => 'string',
            'googlemaps.service.textsearch.param.key' => 'NULL',
            'googlemaps.service.textsearch.param.query' => 'NULL',
            'googlemaps.service.textsearch.param.location' => 'NULL',
            'googlemaps.service.textsearch.param.radius' => 'NULL',
            'googlemaps.service.textsearch.param.language' => 'NULL',
            'googlemaps.service.textsearch.param.minprice' => 'NULL',
            'googlemaps.service.textsearch.param.maxprice' => 'NULL',
            'googlemaps.service.textsearch.param.opennow' => 'NULL',
            'googlemaps.service.textsearch.param.type' => 'NULL',
            'googlemaps.service.textsearch.param.pagetoken' => 'NULL',
            'googlemaps.service.textsearch.param.zagatselected' => 'NULL',
            'googlemaps.service.radarsearch.url' => 'string',
            'googlemaps.service.radarsearch.type' => 'string',
            'googlemaps.service.radarsearch.key' => 'NULL',
            'googlemaps.service.radarsearch.endpoint' => 'boolean',
            'googlemaps.service.radarsearch.responseDefaultKey' => 'string',
            'googlemaps.service.radarsearch.param.key' => 'NULL',
            'googlemaps.service.radarsearch.param.radius' => 'NULL',
            'googlemaps.service.radarsearch.param.location' => 'NULL',
            'googlemaps.service.radarsearch.param.keyword' => 'NULL',
            'googlemaps.service.radarsearch.param.minprice' => 'NULL',
            'googlemaps.service.radarsearch.param.maxprice' => 'NULL',
            'googlemaps.service.radarsearch.param.opennow' => 'NULL',
            'googlemaps.service.radarsearch.param.name' => 'NULL',
            'googlemaps.service.radarsearch.param.type' => 'NULL',
            'googlemaps.service.radarsearch.param.zagatselected' => 'NULL',
            'googlemaps.service.placedetails.url' => 'string',
            'googlemaps.service.placedetails.type' => 'string',
            'googlemaps.service.placedetails.key' => 'NULL',
            'googlemaps.service.placedetails.endpoint' => 'boolean',
            'googlemaps.service.placedetails.responseDefaultKey' => 'string',
            'googlemaps.service.placedetails.param.key' => 'NULL',
            'googlemaps.service.placedetails.param.placeid' => 'NULL',
            'googlemaps.service.placedetails.param.extensions' => 'NULL',
            'googlemaps.service.placedetails.param.language' => 'NULL',
            'googlemaps.service.placeadd.url' => 'string',
            'googlemaps.service.placeadd.type' => 'string',
            'googlemaps.service.placeadd.key' => 'NULL',
            'googlemaps.service.placeadd.endpoint' => 'boolean',
            'googlemaps.service.placeadd.responseDefaultKey' => 'string',
            'googlemaps.service.placeadd.param.key' => 'NULL',
            'googlemaps.service.placeadd.param.accuracy' => 'NULL',
            'googlemaps.service.placeadd.param.address' => 'NULL',
            'googlemaps.service.placeadd.param.language' => 'NULL',
            'googlemaps.service.placeadd.param.location' => 'NULL',
            'googlemaps.service.placeadd.param.name' => 'NULL',
            'googlemaps.service.placeadd.param.phone_number' => 'NULL',
            'googlemaps.service.placeadd.param.types' => 'NULL',
            'googlemaps.service.placeadd.param.type' => 'NULL',
            'googlemaps.service.placeadd.param.website' => 'NULL',
            'googlemaps.service.placedelete.url' => 'string',
            'googlemaps.service.placedelete.type' => 'string',
            'googlemaps.service.placedelete.key' => 'NULL',
            'googlemaps.service.placedelete.endpoint' => 'boolean',
            'googlemaps.service.placedelete.responseDefaultKey' => 'string',
            'googlemaps.service.placedelete.param.key' => 'NULL',
            'googlemaps.service.placedelete.param.place_id' => 'NULL',
            'googlemaps.service.placephoto.url' => 'string',
            'googlemaps.service.placephoto.type' => 'string',
            'googlemaps.service.placephoto.key' => 'NULL',
            'googlemaps.service.placephoto.endpoint' => 'boolean',
            'googlemaps.service.placephoto.responseDefaultKey' => 'string',
            'googlemaps.service.placephoto.param.key' => 'NULL',
            'googlemaps.service.placephoto.param.photoreference' => 'NULL',
            'googlemaps.service.placephoto.param.maxheight' => 'NULL',
            'googlemaps.service.placephoto.param.maxwidth' => 'NULL',
            'googlemaps.service.placeautocomplete.url' => 'string',
            'googlemaps.service.placeautocomplete.type' => 'string',
            'googlemaps.service.placeautocomplete.key' => 'NULL',
            'googlemaps.service.placeautocomplete.endpoint' => 'boolean',
            'googlemaps.service.placeautocomplete.responseDefaultKey' => 'string',
            'googlemaps.service.placeautocomplete.param.key' => 'NULL',
            'googlemaps.service.placeautocomplete.param.input' => 'NULL',
            'googlemaps.service.placeautocomplete.param.offset' => 'NULL',
            'googlemaps.service.placeautocomplete.param.location' => 'NULL',
            'googlemaps.service.placeautocomplete.param.radius' => 'NULL',
            'googlemaps.service.placeautocomplete.param.language' => 'NULL',
            'googlemaps.service.placeautocomplete.param.types' => 'NULL',
            'googlemaps.service.placeautocomplete.param.type' => 'NULL',
            'googlemaps.service.placeautocomplete.param.components' => 'NULL',
            'googlemaps.service.placequeryautocomplete.url' => 'string',
            'googlemaps.service.placequeryautocomplete.type' => 'string',
            'googlemaps.service.placequeryautocomplete.key' => 'NULL',
            'googlemaps.service.placequeryautocomplete.endpoint' => 'boolean',
            'googlemaps.service.placequeryautocomplete.responseDefaultKey' => 'string',
            'googlemaps.service.placequeryautocomplete.param.key' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.input' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.offset' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.location' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.radius' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.language' => 'NULL',
            'googlemaps.endpoint.xml' => 'string',
            'googlemaps.endpoint.json' => 'string',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'integer',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.rehash_on_login' => 'boolean',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.with.stream' => 'string',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'logging.channels.nightwatch.driver' => 'string',
            'logging.channels.nightwatch.via' => 'string',
            'logging.channels.nightwatch.level' => 'string',
            'pso-services.statuses.statuses_greater_than_alloc.allocated' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.committed' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.sent' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.downloaded' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.accepted' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.travelling' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.waiting' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.onsite' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.pendingcompletion' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.visitcomplete' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.completed' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.incomplete' => 'integer',
            'pso-services.statuses.all.unallocated' => 'integer',
            'pso-services.statuses.all.allocated' => 'integer',
            'pso-services.statuses.all.committed' => 'integer',
            'pso-services.statuses.all.sent' => 'integer',
            'pso-services.statuses.all.downloaded' => 'integer',
            'pso-services.statuses.all.accepted' => 'integer',
            'pso-services.statuses.all.travelling' => 'integer',
            'pso-services.statuses.all.waiting' => 'integer',
            'pso-services.statuses.all.onsite' => 'integer',
            'pso-services.statuses.all.pendingcompletion' => 'integer',
            'pso-services.statuses.all.visitcomplete' => 'integer',
            'pso-services.statuses.all.completed' => 'integer',
            'pso-services.statuses.all.incomplete' => 'integer',
            'pso-services.statuses.commit_status' => 'string',
            'pso-services.defaults.activity.base_value' => 'integer',
            'pso-services.defaults.activity.priority' => 'integer',
            'pso-services.defaults.activity.appointment_template_duration' => 'integer',
            'pso-services.defaults.activity.class_id' => 'string',
            'pso-services.defaults.activity.split_allowed' => 'boolean',
            'pso-services.defaults.activity.appointment_booking_suffix' => 'string',
            'pso-services.defaults.resource.class_id' => 'string',
            'pso-services.defaults.process_type' => 'string',
            'pso-services.defaults.timeout' => 'integer',
            'pso-services.defaults.do_on_location_incentive' => 'integer',
            'pso-services.defaults.do_in_locality_incentive' => 'integer',
            'pso-services.defaults.timezone' => 'string',
            'pso-services.defaults.travel_broadcast_api' => 'string',
            'pso-services.defaults.travel_broadcast_timeout_minutes' => 'integer',
            'pso-services.debug.webhook_uuid' => 'string',
            'pso-services.debug.base_url' => 'string',
            'pso-services.debug.username' => 'NULL',
            'pso-services.debug.password' => 'NULL',
            'pso-services.debug.dataset_id' => 'string',
            'pso-services.debug.account_id' => 'string',
            'pso-services.debug.debug_mode_on' => 'boolean',
            'pso-services.debug.debug_timeout' => 'integer',
            'pso-services.settings.validate_object_existence' => 'boolean',
            'pso-services.settings.enable_commit_service_log' => 'boolean',
            'pso-services.settings.enable_swb_response_service_log' => 'boolean',
            'pso-services.settings.service_name' => 'string',
            'pso-services.settings.use_system_date_format' => 'boolean',
            'pso-services.settings.fix_committed_activities' => 'boolean',
            'pso-services.settings.override_commit_timestamps' => 'boolean',
            'pso-services.settings.override_commit_timestamp_value' => 'string',
            'pso-services.settings.enable_debug' => 'boolean',
            'pso-services.settings.force_appointed_check' => 'boolean',
            'pso-services.settings.use_region_as_locality' => 'boolean',
            'pso-services.settings.google_key' => 'string',
            'pso-services.settings.shared_encryption_key' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'sanctum.stateful' => 'array',
            'sanctum.guard' => 'array',
            'sanctum.expiration' => 'NULL',
            'sanctum.token_prefix' => 'string',
            'sanctum.middleware.authenticate_session' => 'string',
            'sanctum.middleware.encrypt_cookies' => 'string',
            'sanctum.middleware.validate_csrf_token' => 'string',
            'scramble.api_path' => 'string',
            'scramble.api_domain' => 'NULL',
            'scramble.export_path' => 'string',
            'scramble.info.version' => 'string',
            'scramble.info.description' => 'string',
            'scramble.ui.title' => 'string',
            'scramble.ui.theme' => 'string',
            'scramble.ui.hide_try_it' => 'boolean',
            'scramble.ui.hide_schemas' => 'boolean',
            'scramble.ui.logo' => 'string',
            'scramble.ui.try_it_credentials_policy' => 'string',
            'scramble.ui.layout' => 'string',
            'scramble.servers' => 'NULL',
            'scramble.enum_cases_description_strategy' => 'string',
            'scramble.middleware' => 'array',
            'scramble.extensions' => 'array',
            'sentry.dsn' => 'NULL',
            'sentry.release' => 'NULL',
            'sentry.environment' => 'NULL',
            'sentry.breadcrumbs.logs' => 'boolean',
            'sentry.breadcrumbs.sql_queries' => 'boolean',
            'sentry.breadcrumbs.sql_bindings' => 'boolean',
            'sentry.breadcrumbs.queue_info' => 'boolean',
            'sentry.breadcrumbs.command_info' => 'boolean',
            'sentry.tracing.queue_job_transactions' => 'boolean',
            'sentry.tracing.queue_jobs' => 'boolean',
            'sentry.tracing.sql_queries' => 'boolean',
            'sentry.tracing.sql_origin' => 'boolean',
            'sentry.tracing.views' => 'boolean',
            'sentry.tracing.default_integrations' => 'boolean',
            'sentry.tracing.missing_routes' => 'boolean',
            'sentry.send_default_pii' => 'boolean',
            'sentry.traces_sample_rate' => 'double',
            'services.postmark.token' => 'NULL',
            'services.resend.key' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'services.mailgun.domain' => 'NULL',
            'services.mailgun.secret' => 'NULL',
            'services.mailgun.endpoint' => 'string',
            'services.mailgun.scheme' => 'string',
            'session.driver' => 'string',
            'session.lifetime' => 'string',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'telescope.domain' => 'NULL',
            'telescope.path' => 'string',
            'telescope.driver' => 'string',
            'telescope.storage.database.connection' => 'string',
            'telescope.storage.database.chunk' => 'integer',
            'telescope.enabled' => 'boolean',
            'telescope.middleware' => 'array',
            'telescope.only_paths' => 'array',
            'telescope.ignore_paths' => 'array',
            'telescope.ignore_commands' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\BatchWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CacheWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CacheWatcher.hidden' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ClientRequestWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CommandWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CommandWatcher.ignore' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\DumpWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\DumpWatcher.always' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\EventWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\EventWatcher.ignore' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ExceptionWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\GateWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\GateWatcher.ignore_abilities' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\GateWatcher.ignore_packages' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\JobWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\LogWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\MailWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\ModelWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\ModelWatcher.events' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ModelWatcher.hydrations' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\NotificationWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\QueryWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\QueryWatcher.ignore_packages' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\QueryWatcher.slow' => 'integer',
            'telescope.watchers.Laravel\Telescope\Watchers\RedisWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.size_limit' => 'integer',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.ignore_http_methods' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.ignore_status_codes' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ScheduleWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\ViewWatcher' => 'boolean',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'string',
            'broadcasting.connections.pusher.secret' => 'string',
            'broadcasting.connections.pusher.app_id' => 'string',
            'broadcasting.connections.pusher.options.cluster' => 'string',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'string',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.failover.retry_after' => 'integer',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.mailers.roundrobin.retry_after' => 'integer',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'nightwatch.enabled' => 'boolean',
            'nightwatch.token' => 'NULL',
            'nightwatch.deployment' => 'NULL',
            'nightwatch.server' => 'string',
            'nightwatch.sampling.requests' => 'double',
            'nightwatch.sampling.commands' => 'double',
            'nightwatch.sampling.exceptions' => 'double',
            'nightwatch.filtering.ignore_cache_events' => 'boolean',
            'nightwatch.filtering.ignore_mail' => 'boolean',
            'nightwatch.filtering.ignore_notifications' => 'boolean',
            'nightwatch.filtering.ignore_outgoing_requests' => 'boolean',
            'nightwatch.filtering.ignore_queries' => 'boolean',
            'nightwatch.filtering.log_level' => 'string',
            'nightwatch.ingest.uri' => 'string',
            'nightwatch.ingest.timeout' => 'double',
            'nightwatch.ingest.connection_timeout' => 'double',
            'nightwatch.ingest.event_buffer' => 'integer',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'array',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));
    override(\Illuminate\Support\Facades\Config::get(), map([
            'app.name' => 'string',
            'app.env' => 'string',
            'app.debug' => 'boolean',
            'app.url' => 'string',
            'app.frontend_url' => 'string',
            'app.asset_url' => 'NULL',
            'app.timezone' => 'string',
            'app.locale' => 'string',
            'app.fallback_locale' => 'string',
            'app.faker_locale' => 'string',
            'app.cipher' => 'string',
            'app.key' => 'string',
            'app.previous_keys' => 'array',
            'app.maintenance.driver' => 'string',
            'app.providers' => 'array',
            'app.aliases.App' => 'string',
            'app.aliases.Arr' => 'string',
            'app.aliases.Artisan' => 'string',
            'app.aliases.Auth' => 'string',
            'app.aliases.Blade' => 'string',
            'app.aliases.Broadcast' => 'string',
            'app.aliases.Bus' => 'string',
            'app.aliases.Cache' => 'string',
            'app.aliases.Concurrency' => 'string',
            'app.aliases.Config' => 'string',
            'app.aliases.Context' => 'string',
            'app.aliases.Cookie' => 'string',
            'app.aliases.Crypt' => 'string',
            'app.aliases.Date' => 'string',
            'app.aliases.DB' => 'string',
            'app.aliases.Eloquent' => 'string',
            'app.aliases.Event' => 'string',
            'app.aliases.File' => 'string',
            'app.aliases.Gate' => 'string',
            'app.aliases.Hash' => 'string',
            'app.aliases.Http' => 'string',
            'app.aliases.Js' => 'string',
            'app.aliases.Lang' => 'string',
            'app.aliases.Log' => 'string',
            'app.aliases.Mail' => 'string',
            'app.aliases.Notification' => 'string',
            'app.aliases.Number' => 'string',
            'app.aliases.Password' => 'string',
            'app.aliases.Process' => 'string',
            'app.aliases.Queue' => 'string',
            'app.aliases.RateLimiter' => 'string',
            'app.aliases.Redirect' => 'string',
            'app.aliases.Request' => 'string',
            'app.aliases.Response' => 'string',
            'app.aliases.Route' => 'string',
            'app.aliases.Schedule' => 'string',
            'app.aliases.Schema' => 'string',
            'app.aliases.Session' => 'string',
            'app.aliases.Storage' => 'string',
            'app.aliases.Str' => 'string',
            'app.aliases.URL' => 'string',
            'app.aliases.Uri' => 'string',
            'app.aliases.Validator' => 'string',
            'app.aliases.View' => 'string',
            'app.aliases.Vite' => 'string',
            'auth.defaults.guard' => 'string',
            'auth.defaults.passwords' => 'string',
            'auth.guards.web.driver' => 'string',
            'auth.guards.web.provider' => 'string',
            'auth.guards.api.driver' => 'string',
            'auth.guards.api.provider' => 'string',
            'auth.guards.sanctum.driver' => 'string',
            'auth.guards.sanctum.provider' => 'NULL',
            'auth.providers.users.driver' => 'string',
            'auth.providers.users.model' => 'string',
            'auth.passwords.users.provider' => 'string',
            'auth.passwords.users.table' => 'string',
            'auth.passwords.users.expire' => 'integer',
            'auth.passwords.users.throttle' => 'integer',
            'auth.password_timeout' => 'integer',
            'backup.backup.name' => 'string',
            'backup.backup.source.files.include' => 'array',
            'backup.backup.source.files.exclude' => 'array',
            'backup.backup.source.files.follow_links' => 'boolean',
            'backup.backup.source.files.ignore_unreadable_directories' => 'boolean',
            'backup.backup.source.files.relative_path' => 'NULL',
            'backup.backup.source.databases' => 'array',
            'backup.backup.database_dump_compressor' => 'NULL',
            'backup.backup.database_dump_file_extension' => 'string',
            'backup.backup.destination.filename_prefix' => 'string',
            'backup.backup.destination.disks' => 'array',
            'backup.backup.temporary_directory' => 'string',
            'backup.backup.password' => 'NULL',
            'backup.backup.encryption' => 'string',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\BackupHasFailedNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\UnhealthyBackupWasFoundNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\CleanupHasFailedNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\BackupWasSuccessfulNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\HealthyBackupWasFoundNotification' => 'array',
            'backup.notifications.notifications.Spatie\Backup\Notifications\Notifications\CleanupWasSuccessfulNotification' => 'array',
            'backup.notifications.notifiable' => 'string',
            'backup.notifications.mail.to' => 'string',
            'backup.notifications.mail.from.address' => 'string',
            'backup.notifications.mail.from.name' => 'string',
            'backup.notifications.slack.webhook_url' => 'string',
            'backup.notifications.slack.channel' => 'NULL',
            'backup.notifications.slack.username' => 'NULL',
            'backup.notifications.slack.icon' => 'NULL',
            'backup.notifications.discord.webhook_url' => 'string',
            'backup.notifications.discord.username' => 'string',
            'backup.notifications.discord.avatar_url' => 'string',
            'backup.monitor_backups.0.name' => 'string',
            'backup.monitor_backups.0.disks' => 'array',
            'backup.monitor_backups.0.health_checks.Spatie\Backup\Tasks\Monitor\HealthChecks\MaximumAgeInDays' => 'integer',
            'backup.monitor_backups.0.health_checks.Spatie\Backup\Tasks\Monitor\HealthChecks\MaximumStorageInMegabytes' => 'integer',
            'backup.cleanup.strategy' => 'string',
            'backup.cleanup.default_strategy.keep_all_backups_for_days' => 'integer',
            'backup.cleanup.default_strategy.keep_daily_backups_for_days' => 'integer',
            'backup.cleanup.default_strategy.keep_weekly_backups_for_weeks' => 'integer',
            'backup.cleanup.default_strategy.keep_monthly_backups_for_months' => 'integer',
            'backup.cleanup.default_strategy.keep_yearly_backups_for_years' => 'integer',
            'backup.cleanup.default_strategy.delete_oldest_backups_when_using_more_megabytes_than' => 'integer',
            'cache.default' => 'string',
            'cache.stores.array.driver' => 'string',
            'cache.stores.array.serialize' => 'boolean',
            'cache.stores.database.driver' => 'string',
            'cache.stores.database.table' => 'string',
            'cache.stores.database.connection' => 'NULL',
            'cache.stores.database.lock_connection' => 'NULL',
            'cache.stores.file.driver' => 'string',
            'cache.stores.file.path' => 'string',
            'cache.stores.memcached.driver' => 'string',
            'cache.stores.memcached.persistent_id' => 'NULL',
            'cache.stores.memcached.sasl' => 'array',
            'cache.stores.memcached.options' => 'array',
            'cache.stores.memcached.servers.0.host' => 'string',
            'cache.stores.memcached.servers.0.port' => 'integer',
            'cache.stores.memcached.servers.0.weight' => 'integer',
            'cache.stores.redis.driver' => 'string',
            'cache.stores.redis.connection' => 'string',
            'cache.stores.redis.lock_connection' => 'string',
            'cache.stores.dynamodb.driver' => 'string',
            'cache.stores.dynamodb.key' => 'string',
            'cache.stores.dynamodb.secret' => 'string',
            'cache.stores.dynamodb.region' => 'string',
            'cache.stores.dynamodb.table' => 'string',
            'cache.stores.dynamodb.endpoint' => 'NULL',
            'cache.stores.octane.driver' => 'string',
            'cache.stores.apc.driver' => 'string',
            'cache.prefix' => 'string',
            'cors.paths' => 'array',
            'cors.allowed_methods' => 'array',
            'cors.allowed_origins' => 'array',
            'cors.allowed_origins_patterns' => 'array',
            'cors.allowed_headers' => 'array',
            'cors.exposed_headers' => 'array',
            'cors.max_age' => 'integer',
            'cors.supports_credentials' => 'boolean',
            'database.default' => 'string',
            'database.connections.sqlite.driver' => 'string',
            'database.connections.sqlite.url' => 'NULL',
            'database.connections.sqlite.database' => 'string',
            'database.connections.sqlite.prefix' => 'string',
            'database.connections.sqlite.foreign_key_constraints' => 'boolean',
            'database.connections.mysql.driver' => 'string',
            'database.connections.mysql.url' => 'NULL',
            'database.connections.mysql.host' => 'string',
            'database.connections.mysql.port' => 'string',
            'database.connections.mysql.database' => 'string',
            'database.connections.mysql.username' => 'string',
            'database.connections.mysql.password' => 'string',
            'database.connections.mysql.unix_socket' => 'string',
            'database.connections.mysql.charset' => 'string',
            'database.connections.mysql.collation' => 'string',
            'database.connections.mysql.prefix' => 'string',
            'database.connections.mysql.prefix_indexes' => 'boolean',
            'database.connections.mysql.strict' => 'boolean',
            'database.connections.mysql.engine' => 'NULL',
            'database.connections.mysql.options' => 'array',
            'database.connections.mariadb.driver' => 'string',
            'database.connections.mariadb.url' => 'NULL',
            'database.connections.mariadb.host' => 'string',
            'database.connections.mariadb.port' => 'string',
            'database.connections.mariadb.database' => 'string',
            'database.connections.mariadb.username' => 'string',
            'database.connections.mariadb.password' => 'string',
            'database.connections.mariadb.unix_socket' => 'string',
            'database.connections.mariadb.charset' => 'string',
            'database.connections.mariadb.collation' => 'string',
            'database.connections.mariadb.prefix' => 'string',
            'database.connections.mariadb.prefix_indexes' => 'boolean',
            'database.connections.mariadb.strict' => 'boolean',
            'database.connections.mariadb.engine' => 'NULL',
            'database.connections.mariadb.options' => 'array',
            'database.connections.pgsql.driver' => 'string',
            'database.connections.pgsql.url' => 'NULL',
            'database.connections.pgsql.host' => 'string',
            'database.connections.pgsql.port' => 'string',
            'database.connections.pgsql.database' => 'string',
            'database.connections.pgsql.username' => 'string',
            'database.connections.pgsql.password' => 'string',
            'database.connections.pgsql.charset' => 'string',
            'database.connections.pgsql.prefix' => 'string',
            'database.connections.pgsql.prefix_indexes' => 'boolean',
            'database.connections.pgsql.search_path' => 'string',
            'database.connections.pgsql.sslmode' => 'string',
            'database.connections.sqlsrv.driver' => 'string',
            'database.connections.sqlsrv.url' => 'NULL',
            'database.connections.sqlsrv.host' => 'string',
            'database.connections.sqlsrv.port' => 'string',
            'database.connections.sqlsrv.database' => 'string',
            'database.connections.sqlsrv.username' => 'string',
            'database.connections.sqlsrv.password' => 'string',
            'database.connections.sqlsrv.charset' => 'string',
            'database.connections.sqlsrv.prefix' => 'string',
            'database.connections.sqlsrv.prefix_indexes' => 'boolean',
            'database.connections.krang_db.driver' => 'string',
            'database.connections.krang_db.host' => 'string',
            'database.connections.krang_db.port' => 'string',
            'database.connections.krang_db.database' => 'string',
            'database.connections.krang_db.username' => 'string',
            'database.connections.krang_db.password' => 'string',
            'database.connections.krang_db.charset' => 'string',
            'database.connections.krang_db.collation' => 'string',
            'database.connections.krang_db.prefix' => 'string',
            'database.connections.krang_db.strict' => 'boolean',
            'database.connections.krang_db.engine' => 'NULL',
            'database.migrations' => 'string',
            'database.redis.client' => 'string',
            'database.redis.options.cluster' => 'string',
            'database.redis.options.prefix' => 'string',
            'database.redis.options.persistent' => 'boolean',
            'database.redis.default.url' => 'NULL',
            'database.redis.default.host' => 'string',
            'database.redis.default.username' => 'NULL',
            'database.redis.default.password' => 'NULL',
            'database.redis.default.port' => 'string',
            'database.redis.default.database' => 'string',
            'database.redis.cache.url' => 'NULL',
            'database.redis.cache.host' => 'string',
            'database.redis.cache.username' => 'NULL',
            'database.redis.cache.password' => 'NULL',
            'database.redis.cache.port' => 'string',
            'database.redis.cache.database' => 'string',
            'filesystems.default' => 'string',
            'filesystems.disks.local.driver' => 'string',
            'filesystems.disks.local.root' => 'string',
            'filesystems.disks.local.throw' => 'boolean',
            'filesystems.disks.public.driver' => 'string',
            'filesystems.disks.public.root' => 'string',
            'filesystems.disks.public.url' => 'string',
            'filesystems.disks.public.visibility' => 'string',
            'filesystems.disks.public.throw' => 'boolean',
            'filesystems.disks.s3.driver' => 'string',
            'filesystems.disks.s3.key' => 'string',
            'filesystems.disks.s3.secret' => 'string',
            'filesystems.disks.s3.region' => 'string',
            'filesystems.disks.s3.bucket' => 'string',
            'filesystems.disks.s3.url' => 'NULL',
            'filesystems.disks.s3.endpoint' => 'NULL',
            'filesystems.disks.s3.use_path_style_endpoint' => 'boolean',
            'filesystems.disks.s3.throw' => 'boolean',
            'filesystems.links.C:\Users\idawo\Herd\pso-services\public\storage' => 'string',
            'geocoder.key' => 'string',
            'geocoder.language' => 'string',
            'geocoder.region' => 'string',
            'geocoder.bounds' => 'string',
            'geocoder.country' => 'string',
            'googlemaps.key' => 'string',
            'googlemaps.ssl_verify_peer' => 'boolean',
            'googlemaps.service.geocoding.url' => 'string',
            'googlemaps.service.geocoding.type' => 'string',
            'googlemaps.service.geocoding.key' => 'NULL',
            'googlemaps.service.geocoding.endpoint' => 'boolean',
            'googlemaps.service.geocoding.responseDefaultKey' => 'string',
            'googlemaps.service.geocoding.param.address' => 'NULL',
            'googlemaps.service.geocoding.param.bounds' => 'NULL',
            'googlemaps.service.geocoding.param.key' => 'NULL',
            'googlemaps.service.geocoding.param.region' => 'NULL',
            'googlemaps.service.geocoding.param.language' => 'NULL',
            'googlemaps.service.geocoding.param.result_type' => 'NULL',
            'googlemaps.service.geocoding.param.location_type' => 'NULL',
            'googlemaps.service.geocoding.param.latlng' => 'NULL',
            'googlemaps.service.geocoding.param.place_id' => 'NULL',
            'googlemaps.service.geocoding.param.components.route' => 'NULL',
            'googlemaps.service.geocoding.param.components.locality' => 'NULL',
            'googlemaps.service.geocoding.param.components.administrative_area' => 'NULL',
            'googlemaps.service.geocoding.param.components.postal_code' => 'NULL',
            'googlemaps.service.geocoding.param.components.country' => 'NULL',
            'googlemaps.service.directions.url' => 'string',
            'googlemaps.service.directions.type' => 'string',
            'googlemaps.service.directions.key' => 'NULL',
            'googlemaps.service.directions.endpoint' => 'boolean',
            'googlemaps.service.directions.responseDefaultKey' => 'string',
            'googlemaps.service.directions.decodePolyline' => 'boolean',
            'googlemaps.service.directions.param.origin' => 'NULL',
            'googlemaps.service.directions.param.destination' => 'NULL',
            'googlemaps.service.directions.param.mode' => 'NULL',
            'googlemaps.service.directions.param.waypoints' => 'NULL',
            'googlemaps.service.directions.param.place_id' => 'NULL',
            'googlemaps.service.directions.param.alternatives' => 'NULL',
            'googlemaps.service.directions.param.avoid' => 'NULL',
            'googlemaps.service.directions.param.language' => 'NULL',
            'googlemaps.service.directions.param.units' => 'NULL',
            'googlemaps.service.directions.param.region' => 'NULL',
            'googlemaps.service.directions.param.departure_time' => 'NULL',
            'googlemaps.service.directions.param.arrival_time' => 'NULL',
            'googlemaps.service.directions.param.transit_mode' => 'NULL',
            'googlemaps.service.directions.param.transit_routing_preference' => 'NULL',
            'googlemaps.service.distancematrix.url' => 'string',
            'googlemaps.service.distancematrix.type' => 'string',
            'googlemaps.service.distancematrix.key' => 'NULL',
            'googlemaps.service.distancematrix.endpoint' => 'boolean',
            'googlemaps.service.distancematrix.responseDefaultKey' => 'string',
            'googlemaps.service.distancematrix.param.origins' => 'NULL',
            'googlemaps.service.distancematrix.param.destinations' => 'NULL',
            'googlemaps.service.distancematrix.param.key' => 'NULL',
            'googlemaps.service.distancematrix.param.mode' => 'NULL',
            'googlemaps.service.distancematrix.param.language' => 'NULL',
            'googlemaps.service.distancematrix.param.avoid' => 'NULL',
            'googlemaps.service.distancematrix.param.units' => 'NULL',
            'googlemaps.service.distancematrix.param.departure_time' => 'NULL',
            'googlemaps.service.distancematrix.param.arrival_time' => 'NULL',
            'googlemaps.service.distancematrix.param.transit_mode' => 'NULL',
            'googlemaps.service.distancematrix.param.transit_routing_preference' => 'NULL',
            'googlemaps.service.elevation.url' => 'string',
            'googlemaps.service.elevation.type' => 'string',
            'googlemaps.service.elevation.key' => 'NULL',
            'googlemaps.service.elevation.endpoint' => 'boolean',
            'googlemaps.service.elevation.responseDefaultKey' => 'string',
            'googlemaps.service.elevation.param.locations' => 'NULL',
            'googlemaps.service.elevation.param.path' => 'NULL',
            'googlemaps.service.elevation.param.samples' => 'NULL',
            'googlemaps.service.elevation.param.key' => 'NULL',
            'googlemaps.service.geolocate.url' => 'string',
            'googlemaps.service.geolocate.type' => 'string',
            'googlemaps.service.geolocate.key' => 'NULL',
            'googlemaps.service.geolocate.endpoint' => 'boolean',
            'googlemaps.service.geolocate.responseDefaultKey' => 'string',
            'googlemaps.service.geolocate.param.homeMobileCountryCode' => 'NULL',
            'googlemaps.service.geolocate.param.homeMobileNetworkCode' => 'NULL',
            'googlemaps.service.geolocate.param.radioType' => 'NULL',
            'googlemaps.service.geolocate.param.carrier' => 'NULL',
            'googlemaps.service.geolocate.param.considerIp' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.cellId' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.locationAreaCode' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.mobileCountryCode' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.mobileNetworkCode' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.age' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.signalStrength' => 'NULL',
            'googlemaps.service.geolocate.param.cellTowers.timingAdvance' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.macAddress' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.signalStrength' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.age' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.channel' => 'NULL',
            'googlemaps.service.geolocate.param.wifiAccessPoints.signalToNoiseRatio' => 'NULL',
            'googlemaps.service.snapToRoads.url' => 'string',
            'googlemaps.service.snapToRoads.type' => 'string',
            'googlemaps.service.snapToRoads.key' => 'NULL',
            'googlemaps.service.snapToRoads.endpoint' => 'boolean',
            'googlemaps.service.snapToRoads.responseDefaultKey' => 'string',
            'googlemaps.service.snapToRoads.param.locations' => 'NULL',
            'googlemaps.service.snapToRoads.param.path' => 'NULL',
            'googlemaps.service.snapToRoads.param.samples' => 'NULL',
            'googlemaps.service.snapToRoads.param.key' => 'NULL',
            'googlemaps.service.speedLimits.url' => 'string',
            'googlemaps.service.speedLimits.type' => 'string',
            'googlemaps.service.speedLimits.key' => 'NULL',
            'googlemaps.service.speedLimits.endpoint' => 'boolean',
            'googlemaps.service.speedLimits.responseDefaultKey' => 'string',
            'googlemaps.service.speedLimits.param.path' => 'NULL',
            'googlemaps.service.speedLimits.param.placeId' => 'NULL',
            'googlemaps.service.speedLimits.param.units' => 'NULL',
            'googlemaps.service.speedLimits.param.key' => 'NULL',
            'googlemaps.service.timezone.url' => 'string',
            'googlemaps.service.timezone.type' => 'string',
            'googlemaps.service.timezone.key' => 'NULL',
            'googlemaps.service.timezone.endpoint' => 'boolean',
            'googlemaps.service.timezone.responseDefaultKey' => 'string',
            'googlemaps.service.timezone.param.location' => 'NULL',
            'googlemaps.service.timezone.param.timestamp' => 'NULL',
            'googlemaps.service.timezone.param.key' => 'NULL',
            'googlemaps.service.timezone.param.language' => 'NULL',
            'googlemaps.service.nearbysearch.url' => 'string',
            'googlemaps.service.nearbysearch.type' => 'string',
            'googlemaps.service.nearbysearch.key' => 'NULL',
            'googlemaps.service.nearbysearch.endpoint' => 'boolean',
            'googlemaps.service.nearbysearch.responseDefaultKey' => 'string',
            'googlemaps.service.nearbysearch.param.key' => 'NULL',
            'googlemaps.service.nearbysearch.param.location' => 'NULL',
            'googlemaps.service.nearbysearch.param.radius' => 'NULL',
            'googlemaps.service.nearbysearch.param.keyword' => 'NULL',
            'googlemaps.service.nearbysearch.param.language' => 'NULL',
            'googlemaps.service.nearbysearch.param.minprice' => 'NULL',
            'googlemaps.service.nearbysearch.param.maxprice' => 'NULL',
            'googlemaps.service.nearbysearch.param.name' => 'NULL',
            'googlemaps.service.nearbysearch.param.opennow' => 'NULL',
            'googlemaps.service.nearbysearch.param.rankby' => 'NULL',
            'googlemaps.service.nearbysearch.param.type' => 'NULL',
            'googlemaps.service.nearbysearch.param.pagetoken' => 'NULL',
            'googlemaps.service.nearbysearch.param.zagatselected' => 'NULL',
            'googlemaps.service.textsearch.url' => 'string',
            'googlemaps.service.textsearch.type' => 'string',
            'googlemaps.service.textsearch.key' => 'NULL',
            'googlemaps.service.textsearch.endpoint' => 'boolean',
            'googlemaps.service.textsearch.responseDefaultKey' => 'string',
            'googlemaps.service.textsearch.param.key' => 'NULL',
            'googlemaps.service.textsearch.param.query' => 'NULL',
            'googlemaps.service.textsearch.param.location' => 'NULL',
            'googlemaps.service.textsearch.param.radius' => 'NULL',
            'googlemaps.service.textsearch.param.language' => 'NULL',
            'googlemaps.service.textsearch.param.minprice' => 'NULL',
            'googlemaps.service.textsearch.param.maxprice' => 'NULL',
            'googlemaps.service.textsearch.param.opennow' => 'NULL',
            'googlemaps.service.textsearch.param.type' => 'NULL',
            'googlemaps.service.textsearch.param.pagetoken' => 'NULL',
            'googlemaps.service.textsearch.param.zagatselected' => 'NULL',
            'googlemaps.service.radarsearch.url' => 'string',
            'googlemaps.service.radarsearch.type' => 'string',
            'googlemaps.service.radarsearch.key' => 'NULL',
            'googlemaps.service.radarsearch.endpoint' => 'boolean',
            'googlemaps.service.radarsearch.responseDefaultKey' => 'string',
            'googlemaps.service.radarsearch.param.key' => 'NULL',
            'googlemaps.service.radarsearch.param.radius' => 'NULL',
            'googlemaps.service.radarsearch.param.location' => 'NULL',
            'googlemaps.service.radarsearch.param.keyword' => 'NULL',
            'googlemaps.service.radarsearch.param.minprice' => 'NULL',
            'googlemaps.service.radarsearch.param.maxprice' => 'NULL',
            'googlemaps.service.radarsearch.param.opennow' => 'NULL',
            'googlemaps.service.radarsearch.param.name' => 'NULL',
            'googlemaps.service.radarsearch.param.type' => 'NULL',
            'googlemaps.service.radarsearch.param.zagatselected' => 'NULL',
            'googlemaps.service.placedetails.url' => 'string',
            'googlemaps.service.placedetails.type' => 'string',
            'googlemaps.service.placedetails.key' => 'NULL',
            'googlemaps.service.placedetails.endpoint' => 'boolean',
            'googlemaps.service.placedetails.responseDefaultKey' => 'string',
            'googlemaps.service.placedetails.param.key' => 'NULL',
            'googlemaps.service.placedetails.param.placeid' => 'NULL',
            'googlemaps.service.placedetails.param.extensions' => 'NULL',
            'googlemaps.service.placedetails.param.language' => 'NULL',
            'googlemaps.service.placeadd.url' => 'string',
            'googlemaps.service.placeadd.type' => 'string',
            'googlemaps.service.placeadd.key' => 'NULL',
            'googlemaps.service.placeadd.endpoint' => 'boolean',
            'googlemaps.service.placeadd.responseDefaultKey' => 'string',
            'googlemaps.service.placeadd.param.key' => 'NULL',
            'googlemaps.service.placeadd.param.accuracy' => 'NULL',
            'googlemaps.service.placeadd.param.address' => 'NULL',
            'googlemaps.service.placeadd.param.language' => 'NULL',
            'googlemaps.service.placeadd.param.location' => 'NULL',
            'googlemaps.service.placeadd.param.name' => 'NULL',
            'googlemaps.service.placeadd.param.phone_number' => 'NULL',
            'googlemaps.service.placeadd.param.types' => 'NULL',
            'googlemaps.service.placeadd.param.type' => 'NULL',
            'googlemaps.service.placeadd.param.website' => 'NULL',
            'googlemaps.service.placedelete.url' => 'string',
            'googlemaps.service.placedelete.type' => 'string',
            'googlemaps.service.placedelete.key' => 'NULL',
            'googlemaps.service.placedelete.endpoint' => 'boolean',
            'googlemaps.service.placedelete.responseDefaultKey' => 'string',
            'googlemaps.service.placedelete.param.key' => 'NULL',
            'googlemaps.service.placedelete.param.place_id' => 'NULL',
            'googlemaps.service.placephoto.url' => 'string',
            'googlemaps.service.placephoto.type' => 'string',
            'googlemaps.service.placephoto.key' => 'NULL',
            'googlemaps.service.placephoto.endpoint' => 'boolean',
            'googlemaps.service.placephoto.responseDefaultKey' => 'string',
            'googlemaps.service.placephoto.param.key' => 'NULL',
            'googlemaps.service.placephoto.param.photoreference' => 'NULL',
            'googlemaps.service.placephoto.param.maxheight' => 'NULL',
            'googlemaps.service.placephoto.param.maxwidth' => 'NULL',
            'googlemaps.service.placeautocomplete.url' => 'string',
            'googlemaps.service.placeautocomplete.type' => 'string',
            'googlemaps.service.placeautocomplete.key' => 'NULL',
            'googlemaps.service.placeautocomplete.endpoint' => 'boolean',
            'googlemaps.service.placeautocomplete.responseDefaultKey' => 'string',
            'googlemaps.service.placeautocomplete.param.key' => 'NULL',
            'googlemaps.service.placeautocomplete.param.input' => 'NULL',
            'googlemaps.service.placeautocomplete.param.offset' => 'NULL',
            'googlemaps.service.placeautocomplete.param.location' => 'NULL',
            'googlemaps.service.placeautocomplete.param.radius' => 'NULL',
            'googlemaps.service.placeautocomplete.param.language' => 'NULL',
            'googlemaps.service.placeautocomplete.param.types' => 'NULL',
            'googlemaps.service.placeautocomplete.param.type' => 'NULL',
            'googlemaps.service.placeautocomplete.param.components' => 'NULL',
            'googlemaps.service.placequeryautocomplete.url' => 'string',
            'googlemaps.service.placequeryautocomplete.type' => 'string',
            'googlemaps.service.placequeryautocomplete.key' => 'NULL',
            'googlemaps.service.placequeryautocomplete.endpoint' => 'boolean',
            'googlemaps.service.placequeryautocomplete.responseDefaultKey' => 'string',
            'googlemaps.service.placequeryautocomplete.param.key' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.input' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.offset' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.location' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.radius' => 'NULL',
            'googlemaps.service.placequeryautocomplete.param.language' => 'NULL',
            'googlemaps.endpoint.xml' => 'string',
            'googlemaps.endpoint.json' => 'string',
            'hashing.driver' => 'string',
            'hashing.bcrypt.rounds' => 'integer',
            'hashing.argon.memory' => 'integer',
            'hashing.argon.threads' => 'integer',
            'hashing.argon.time' => 'integer',
            'hashing.rehash_on_login' => 'boolean',
            'logging.default' => 'string',
            'logging.deprecations.channel' => 'NULL',
            'logging.deprecations.trace' => 'boolean',
            'logging.channels.stack.driver' => 'string',
            'logging.channels.stack.channels' => 'array',
            'logging.channels.stack.ignore_exceptions' => 'boolean',
            'logging.channels.single.driver' => 'string',
            'logging.channels.single.path' => 'string',
            'logging.channels.single.level' => 'string',
            'logging.channels.daily.driver' => 'string',
            'logging.channels.daily.path' => 'string',
            'logging.channels.daily.level' => 'string',
            'logging.channels.daily.days' => 'integer',
            'logging.channels.slack.driver' => 'string',
            'logging.channels.slack.url' => 'NULL',
            'logging.channels.slack.username' => 'string',
            'logging.channels.slack.emoji' => 'string',
            'logging.channels.slack.level' => 'string',
            'logging.channels.papertrail.driver' => 'string',
            'logging.channels.papertrail.level' => 'string',
            'logging.channels.papertrail.handler' => 'string',
            'logging.channels.papertrail.handler_with.host' => 'NULL',
            'logging.channels.papertrail.handler_with.port' => 'NULL',
            'logging.channels.papertrail.handler_with.connectionString' => 'string',
            'logging.channels.stderr.driver' => 'string',
            'logging.channels.stderr.level' => 'string',
            'logging.channels.stderr.handler' => 'string',
            'logging.channels.stderr.formatter' => 'NULL',
            'logging.channels.stderr.with.stream' => 'string',
            'logging.channels.syslog.driver' => 'string',
            'logging.channels.syslog.level' => 'string',
            'logging.channels.errorlog.driver' => 'string',
            'logging.channels.errorlog.level' => 'string',
            'logging.channels.null.driver' => 'string',
            'logging.channels.null.handler' => 'string',
            'logging.channels.emergency.path' => 'string',
            'logging.channels.nightwatch.driver' => 'string',
            'logging.channels.nightwatch.via' => 'string',
            'logging.channels.nightwatch.level' => 'string',
            'pso-services.statuses.statuses_greater_than_alloc.allocated' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.committed' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.sent' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.downloaded' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.accepted' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.travelling' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.waiting' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.onsite' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.pendingcompletion' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.visitcomplete' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.completed' => 'integer',
            'pso-services.statuses.statuses_greater_than_alloc.incomplete' => 'integer',
            'pso-services.statuses.all.unallocated' => 'integer',
            'pso-services.statuses.all.allocated' => 'integer',
            'pso-services.statuses.all.committed' => 'integer',
            'pso-services.statuses.all.sent' => 'integer',
            'pso-services.statuses.all.downloaded' => 'integer',
            'pso-services.statuses.all.accepted' => 'integer',
            'pso-services.statuses.all.travelling' => 'integer',
            'pso-services.statuses.all.waiting' => 'integer',
            'pso-services.statuses.all.onsite' => 'integer',
            'pso-services.statuses.all.pendingcompletion' => 'integer',
            'pso-services.statuses.all.visitcomplete' => 'integer',
            'pso-services.statuses.all.completed' => 'integer',
            'pso-services.statuses.all.incomplete' => 'integer',
            'pso-services.statuses.commit_status' => 'string',
            'pso-services.defaults.activity.base_value' => 'integer',
            'pso-services.defaults.activity.priority' => 'integer',
            'pso-services.defaults.activity.appointment_template_duration' => 'integer',
            'pso-services.defaults.activity.class_id' => 'string',
            'pso-services.defaults.activity.split_allowed' => 'boolean',
            'pso-services.defaults.activity.appointment_booking_suffix' => 'string',
            'pso-services.defaults.resource.class_id' => 'string',
            'pso-services.defaults.process_type' => 'string',
            'pso-services.defaults.timeout' => 'integer',
            'pso-services.defaults.do_on_location_incentive' => 'integer',
            'pso-services.defaults.do_in_locality_incentive' => 'integer',
            'pso-services.defaults.timezone' => 'string',
            'pso-services.defaults.travel_broadcast_api' => 'string',
            'pso-services.defaults.travel_broadcast_timeout_minutes' => 'integer',
            'pso-services.debug.webhook_uuid' => 'string',
            'pso-services.debug.base_url' => 'string',
            'pso-services.debug.username' => 'NULL',
            'pso-services.debug.password' => 'NULL',
            'pso-services.debug.dataset_id' => 'string',
            'pso-services.debug.account_id' => 'string',
            'pso-services.debug.debug_mode_on' => 'boolean',
            'pso-services.debug.debug_timeout' => 'integer',
            'pso-services.settings.validate_object_existence' => 'boolean',
            'pso-services.settings.enable_commit_service_log' => 'boolean',
            'pso-services.settings.enable_swb_response_service_log' => 'boolean',
            'pso-services.settings.service_name' => 'string',
            'pso-services.settings.use_system_date_format' => 'boolean',
            'pso-services.settings.fix_committed_activities' => 'boolean',
            'pso-services.settings.override_commit_timestamps' => 'boolean',
            'pso-services.settings.override_commit_timestamp_value' => 'string',
            'pso-services.settings.enable_debug' => 'boolean',
            'pso-services.settings.force_appointed_check' => 'boolean',
            'pso-services.settings.use_region_as_locality' => 'boolean',
            'pso-services.settings.google_key' => 'string',
            'pso-services.settings.shared_encryption_key' => 'string',
            'queue.default' => 'string',
            'queue.connections.sync.driver' => 'string',
            'queue.connections.database.driver' => 'string',
            'queue.connections.database.table' => 'string',
            'queue.connections.database.queue' => 'string',
            'queue.connections.database.retry_after' => 'integer',
            'queue.connections.database.after_commit' => 'boolean',
            'queue.connections.beanstalkd.driver' => 'string',
            'queue.connections.beanstalkd.host' => 'string',
            'queue.connections.beanstalkd.queue' => 'string',
            'queue.connections.beanstalkd.retry_after' => 'integer',
            'queue.connections.beanstalkd.block_for' => 'integer',
            'queue.connections.beanstalkd.after_commit' => 'boolean',
            'queue.connections.sqs.driver' => 'string',
            'queue.connections.sqs.key' => 'string',
            'queue.connections.sqs.secret' => 'string',
            'queue.connections.sqs.prefix' => 'string',
            'queue.connections.sqs.queue' => 'string',
            'queue.connections.sqs.suffix' => 'NULL',
            'queue.connections.sqs.region' => 'string',
            'queue.connections.sqs.after_commit' => 'boolean',
            'queue.connections.redis.driver' => 'string',
            'queue.connections.redis.connection' => 'string',
            'queue.connections.redis.queue' => 'string',
            'queue.connections.redis.retry_after' => 'integer',
            'queue.connections.redis.block_for' => 'NULL',
            'queue.connections.redis.after_commit' => 'boolean',
            'queue.batching.database' => 'string',
            'queue.batching.table' => 'string',
            'queue.failed.driver' => 'string',
            'queue.failed.database' => 'string',
            'queue.failed.table' => 'string',
            'sanctum.stateful' => 'array',
            'sanctum.guard' => 'array',
            'sanctum.expiration' => 'NULL',
            'sanctum.token_prefix' => 'string',
            'sanctum.middleware.authenticate_session' => 'string',
            'sanctum.middleware.encrypt_cookies' => 'string',
            'sanctum.middleware.validate_csrf_token' => 'string',
            'scramble.api_path' => 'string',
            'scramble.api_domain' => 'NULL',
            'scramble.export_path' => 'string',
            'scramble.info.version' => 'string',
            'scramble.info.description' => 'string',
            'scramble.ui.title' => 'string',
            'scramble.ui.theme' => 'string',
            'scramble.ui.hide_try_it' => 'boolean',
            'scramble.ui.hide_schemas' => 'boolean',
            'scramble.ui.logo' => 'string',
            'scramble.ui.try_it_credentials_policy' => 'string',
            'scramble.ui.layout' => 'string',
            'scramble.servers' => 'NULL',
            'scramble.enum_cases_description_strategy' => 'string',
            'scramble.middleware' => 'array',
            'scramble.extensions' => 'array',
            'sentry.dsn' => 'NULL',
            'sentry.release' => 'NULL',
            'sentry.environment' => 'NULL',
            'sentry.breadcrumbs.logs' => 'boolean',
            'sentry.breadcrumbs.sql_queries' => 'boolean',
            'sentry.breadcrumbs.sql_bindings' => 'boolean',
            'sentry.breadcrumbs.queue_info' => 'boolean',
            'sentry.breadcrumbs.command_info' => 'boolean',
            'sentry.tracing.queue_job_transactions' => 'boolean',
            'sentry.tracing.queue_jobs' => 'boolean',
            'sentry.tracing.sql_queries' => 'boolean',
            'sentry.tracing.sql_origin' => 'boolean',
            'sentry.tracing.views' => 'boolean',
            'sentry.tracing.default_integrations' => 'boolean',
            'sentry.tracing.missing_routes' => 'boolean',
            'sentry.send_default_pii' => 'boolean',
            'sentry.traces_sample_rate' => 'double',
            'services.postmark.token' => 'NULL',
            'services.resend.key' => 'NULL',
            'services.ses.key' => 'string',
            'services.ses.secret' => 'string',
            'services.ses.region' => 'string',
            'services.slack.notifications.bot_user_oauth_token' => 'NULL',
            'services.slack.notifications.channel' => 'NULL',
            'services.mailgun.domain' => 'NULL',
            'services.mailgun.secret' => 'NULL',
            'services.mailgun.endpoint' => 'string',
            'services.mailgun.scheme' => 'string',
            'session.driver' => 'string',
            'session.lifetime' => 'string',
            'session.expire_on_close' => 'boolean',
            'session.encrypt' => 'boolean',
            'session.files' => 'string',
            'session.connection' => 'NULL',
            'session.table' => 'string',
            'session.store' => 'NULL',
            'session.lottery' => 'array',
            'session.cookie' => 'string',
            'session.path' => 'string',
            'session.domain' => 'NULL',
            'session.secure' => 'NULL',
            'session.http_only' => 'boolean',
            'session.same_site' => 'string',
            'session.partitioned' => 'boolean',
            'telescope.domain' => 'NULL',
            'telescope.path' => 'string',
            'telescope.driver' => 'string',
            'telescope.storage.database.connection' => 'string',
            'telescope.storage.database.chunk' => 'integer',
            'telescope.enabled' => 'boolean',
            'telescope.middleware' => 'array',
            'telescope.only_paths' => 'array',
            'telescope.ignore_paths' => 'array',
            'telescope.ignore_commands' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\BatchWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CacheWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CacheWatcher.hidden' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ClientRequestWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CommandWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\CommandWatcher.ignore' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\DumpWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\DumpWatcher.always' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\EventWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\EventWatcher.ignore' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ExceptionWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\GateWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\GateWatcher.ignore_abilities' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\GateWatcher.ignore_packages' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\JobWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\LogWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\MailWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\ModelWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\ModelWatcher.events' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ModelWatcher.hydrations' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\NotificationWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\QueryWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\QueryWatcher.ignore_packages' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\QueryWatcher.slow' => 'integer',
            'telescope.watchers.Laravel\Telescope\Watchers\RedisWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.enabled' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.size_limit' => 'integer',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.ignore_http_methods' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\RequestWatcher.ignore_status_codes' => 'array',
            'telescope.watchers.Laravel\Telescope\Watchers\ScheduleWatcher' => 'boolean',
            'telescope.watchers.Laravel\Telescope\Watchers\ViewWatcher' => 'boolean',
            'view.paths' => 'array',
            'view.compiled' => 'string',
            'broadcasting.default' => 'string',
            'broadcasting.connections.reverb.driver' => 'string',
            'broadcasting.connections.reverb.key' => 'NULL',
            'broadcasting.connections.reverb.secret' => 'NULL',
            'broadcasting.connections.reverb.app_id' => 'NULL',
            'broadcasting.connections.reverb.options.host' => 'NULL',
            'broadcasting.connections.reverb.options.port' => 'integer',
            'broadcasting.connections.reverb.options.scheme' => 'string',
            'broadcasting.connections.reverb.options.useTLS' => 'boolean',
            'broadcasting.connections.reverb.client_options' => 'array',
            'broadcasting.connections.pusher.driver' => 'string',
            'broadcasting.connections.pusher.key' => 'string',
            'broadcasting.connections.pusher.secret' => 'string',
            'broadcasting.connections.pusher.app_id' => 'string',
            'broadcasting.connections.pusher.options.cluster' => 'string',
            'broadcasting.connections.pusher.options.host' => 'string',
            'broadcasting.connections.pusher.options.port' => 'string',
            'broadcasting.connections.pusher.options.scheme' => 'string',
            'broadcasting.connections.pusher.options.encrypted' => 'boolean',
            'broadcasting.connections.pusher.options.useTLS' => 'boolean',
            'broadcasting.connections.pusher.client_options' => 'array',
            'broadcasting.connections.ably.driver' => 'string',
            'broadcasting.connections.ably.key' => 'NULL',
            'broadcasting.connections.log.driver' => 'string',
            'broadcasting.connections.null.driver' => 'string',
            'concurrency.default' => 'string',
            'mail.default' => 'string',
            'mail.mailers.smtp.transport' => 'string',
            'mail.mailers.smtp.scheme' => 'NULL',
            'mail.mailers.smtp.url' => 'NULL',
            'mail.mailers.smtp.host' => 'string',
            'mail.mailers.smtp.port' => 'string',
            'mail.mailers.smtp.username' => 'NULL',
            'mail.mailers.smtp.password' => 'NULL',
            'mail.mailers.smtp.timeout' => 'NULL',
            'mail.mailers.smtp.local_domain' => 'string',
            'mail.mailers.ses.transport' => 'string',
            'mail.mailers.postmark.transport' => 'string',
            'mail.mailers.resend.transport' => 'string',
            'mail.mailers.sendmail.transport' => 'string',
            'mail.mailers.sendmail.path' => 'string',
            'mail.mailers.log.transport' => 'string',
            'mail.mailers.log.channel' => 'NULL',
            'mail.mailers.array.transport' => 'string',
            'mail.mailers.failover.transport' => 'string',
            'mail.mailers.failover.mailers' => 'array',
            'mail.mailers.failover.retry_after' => 'integer',
            'mail.mailers.roundrobin.transport' => 'string',
            'mail.mailers.roundrobin.mailers' => 'array',
            'mail.mailers.roundrobin.retry_after' => 'integer',
            'mail.from.address' => 'string',
            'mail.from.name' => 'string',
            'mail.markdown.theme' => 'string',
            'mail.markdown.paths' => 'array',
            'nightwatch.enabled' => 'boolean',
            'nightwatch.token' => 'NULL',
            'nightwatch.deployment' => 'NULL',
            'nightwatch.server' => 'string',
            'nightwatch.sampling.requests' => 'double',
            'nightwatch.sampling.commands' => 'double',
            'nightwatch.sampling.exceptions' => 'double',
            'nightwatch.filtering.ignore_cache_events' => 'boolean',
            'nightwatch.filtering.ignore_mail' => 'boolean',
            'nightwatch.filtering.ignore_notifications' => 'boolean',
            'nightwatch.filtering.ignore_outgoing_requests' => 'boolean',
            'nightwatch.filtering.ignore_queries' => 'boolean',
            'nightwatch.filtering.log_level' => 'string',
            'nightwatch.ingest.uri' => 'string',
            'nightwatch.ingest.timeout' => 'double',
            'nightwatch.ingest.connection_timeout' => 'double',
            'nightwatch.ingest.event_buffer' => 'integer',
            'ide-helper.filename' => 'string',
            'ide-helper.models_filename' => 'string',
            'ide-helper.meta_filename' => 'string',
            'ide-helper.include_fluent' => 'boolean',
            'ide-helper.include_factory_builders' => 'boolean',
            'ide-helper.write_model_magic_where' => 'boolean',
            'ide-helper.write_model_external_builder_methods' => 'boolean',
            'ide-helper.write_model_relation_count_properties' => 'boolean',
            'ide-helper.write_eloquent_model_mixins' => 'boolean',
            'ide-helper.include_helpers' => 'boolean',
            'ide-helper.helper_files' => 'array',
            'ide-helper.model_locations' => 'array',
            'ide-helper.ignored_models' => 'array',
            'ide-helper.model_hooks' => 'array',
            'ide-helper.extra.Eloquent' => 'array',
            'ide-helper.extra.Session' => 'array',
            'ide-helper.magic' => 'array',
            'ide-helper.interfaces' => 'array',
            'ide-helper.model_camel_case_properties' => 'boolean',
            'ide-helper.type_overrides.integer' => 'string',
            'ide-helper.type_overrides.boolean' => 'string',
            'ide-helper.include_class_docblocks' => 'boolean',
            'ide-helper.force_fqn' => 'boolean',
            'ide-helper.use_generics_annotations' => 'boolean',
            'ide-helper.additional_relation_types' => 'array',
            'ide-helper.additional_relation_return_types' => 'array',
            'ide-helper.enforce_nullable_relationships' => 'boolean',
            'ide-helper.post_migrate' => 'array',
            'ide-helper.macroable_traits' => 'array',
            'tinker.commands' => 'array',
            'tinker.alias' => 'array',
            'tinker.dont_alias' => 'array',
        ]));


    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::mock(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::partialMock(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::instance(0), type(1));
    override(\Illuminate\Foundation\Testing\Concerns\InteractsWithContainer::spy(0), map(["" => "@&\Mockery\MockInterface"]));
    override(\Illuminate\Support\Arr::add(0), type(0));
    override(\Illuminate\Support\Arr::except(0), type(0));
    override(\Illuminate\Support\Arr::first(0), elementType(0));
    override(\Illuminate\Support\Arr::last(0), elementType(0));
    override(\Illuminate\Support\Arr::get(0), elementType(0));
    override(\Illuminate\Support\Arr::only(0), type(0));
    override(\Illuminate\Support\Arr::prepend(0), type(0));
    override(\Illuminate\Support\Arr::pull(0), elementType(0));
    override(\Illuminate\Support\Arr::set(0), type(0));
    override(\Illuminate\Support\Arr::shuffle(0), type(0));
    override(\Illuminate\Support\Arr::sort(0), type(0));
    override(\Illuminate\Support\Arr::sortRecursive(0), type(0));
    override(\Illuminate\Support\Arr::where(0), type(0));
    override(\array_add(0), type(0));
    override(\array_except(0), type(0));
    override(\array_first(0), elementType(0));
    override(\array_last(0), elementType(0));
    override(\array_get(0), elementType(0));
    override(\array_only(0), type(0));
    override(\array_prepend(0), type(0));
    override(\array_pull(0), elementType(0));
    override(\array_set(0), type(0));
    override(\array_sort(0), type(0));
    override(\array_sort_recursive(0), type(0));
    override(\array_where(0), type(0));
    override(\head(0), elementType(0));
    override(\last(0), elementType(0));
    override(\with(0), type(0));
    override(\tap(0), type(0));
    override(\optional(0), type(0));

            registerArgumentsSet('auth', );
        registerArgumentsSet('configs', 
'app.name','app.env','app.debug','app.url','app.frontend_url',
'app.asset_url','app.timezone','app.locale','app.fallback_locale','app.faker_locale',
'app.cipher','app.key','app.previous_keys','app.maintenance.driver','app.providers',
'app.aliases.App','app.aliases.Arr','app.aliases.Artisan','app.aliases.Auth','app.aliases.Blade',
'app.aliases.Broadcast','app.aliases.Bus','app.aliases.Cache','app.aliases.Concurrency','app.aliases.Config',
'app.aliases.Context','app.aliases.Cookie','app.aliases.Crypt','app.aliases.Date','app.aliases.DB',
'app.aliases.Eloquent','app.aliases.Event','app.aliases.File','app.aliases.Gate','app.aliases.Hash',
'app.aliases.Http','app.aliases.Js','app.aliases.Lang','app.aliases.Log','app.aliases.Mail',
'app.aliases.Notification','app.aliases.Number','app.aliases.Password','app.aliases.Process','app.aliases.Queue',
'app.aliases.RateLimiter','app.aliases.Redirect','app.aliases.Request','app.aliases.Response','app.aliases.Route',
'app.aliases.Schedule','app.aliases.Schema','app.aliases.Session','app.aliases.Storage','app.aliases.Str',
'app.aliases.URL','app.aliases.Uri','app.aliases.Validator','app.aliases.View','app.aliases.Vite',
'auth.defaults.guard','auth.defaults.passwords','auth.guards.web.driver','auth.guards.web.provider','auth.guards.api.driver',
'auth.guards.api.provider','auth.guards.sanctum.driver','auth.guards.sanctum.provider','auth.providers.users.driver','auth.providers.users.model',
'auth.passwords.users.provider','auth.passwords.users.table','auth.passwords.users.expire','auth.passwords.users.throttle','auth.password_timeout',
'backup.backup.name','backup.backup.source.files.include','backup.backup.source.files.exclude','backup.backup.source.files.follow_links','backup.backup.source.files.ignore_unreadable_directories',
'backup.backup.source.files.relative_path','backup.backup.source.databases','backup.backup.database_dump_compressor','backup.backup.database_dump_file_extension','backup.backup.destination.filename_prefix',
'backup.backup.destination.disks','backup.backup.temporary_directory','backup.backup.password','backup.backup.encryption','backup.notifications.notifications.Spatie\\Backup\\Notifications\\Notifications\\BackupHasFailedNotification',
'backup.notifications.notifications.Spatie\\Backup\\Notifications\\Notifications\\UnhealthyBackupWasFoundNotification','backup.notifications.notifications.Spatie\\Backup\\Notifications\\Notifications\\CleanupHasFailedNotification','backup.notifications.notifications.Spatie\\Backup\\Notifications\\Notifications\\BackupWasSuccessfulNotification','backup.notifications.notifications.Spatie\\Backup\\Notifications\\Notifications\\HealthyBackupWasFoundNotification','backup.notifications.notifications.Spatie\\Backup\\Notifications\\Notifications\\CleanupWasSuccessfulNotification',
'backup.notifications.notifiable','backup.notifications.mail.to','backup.notifications.mail.from.address','backup.notifications.mail.from.name','backup.notifications.slack.webhook_url',
'backup.notifications.slack.channel','backup.notifications.slack.username','backup.notifications.slack.icon','backup.notifications.discord.webhook_url','backup.notifications.discord.username',
'backup.notifications.discord.avatar_url','backup.monitor_backups.0.name','backup.monitor_backups.0.disks','backup.monitor_backups.0.health_checks.Spatie\\Backup\\Tasks\\Monitor\\HealthChecks\\MaximumAgeInDays','backup.monitor_backups.0.health_checks.Spatie\\Backup\\Tasks\\Monitor\\HealthChecks\\MaximumStorageInMegabytes',
'backup.cleanup.strategy','backup.cleanup.default_strategy.keep_all_backups_for_days','backup.cleanup.default_strategy.keep_daily_backups_for_days','backup.cleanup.default_strategy.keep_weekly_backups_for_weeks','backup.cleanup.default_strategy.keep_monthly_backups_for_months',
'backup.cleanup.default_strategy.keep_yearly_backups_for_years','backup.cleanup.default_strategy.delete_oldest_backups_when_using_more_megabytes_than','cache.default','cache.stores.array.driver','cache.stores.array.serialize',
'cache.stores.database.driver','cache.stores.database.table','cache.stores.database.connection','cache.stores.database.lock_connection','cache.stores.file.driver',
'cache.stores.file.path','cache.stores.memcached.driver','cache.stores.memcached.persistent_id','cache.stores.memcached.sasl','cache.stores.memcached.options',
'cache.stores.memcached.servers.0.host','cache.stores.memcached.servers.0.port','cache.stores.memcached.servers.0.weight','cache.stores.redis.driver','cache.stores.redis.connection',
'cache.stores.redis.lock_connection','cache.stores.dynamodb.driver','cache.stores.dynamodb.key','cache.stores.dynamodb.secret','cache.stores.dynamodb.region',
'cache.stores.dynamodb.table','cache.stores.dynamodb.endpoint','cache.stores.octane.driver','cache.stores.apc.driver','cache.prefix',
'cors.paths','cors.allowed_methods','cors.allowed_origins','cors.allowed_origins_patterns','cors.allowed_headers',
'cors.exposed_headers','cors.max_age','cors.supports_credentials','database.default','database.connections.sqlite.driver',
'database.connections.sqlite.url','database.connections.sqlite.database','database.connections.sqlite.prefix','database.connections.sqlite.foreign_key_constraints','database.connections.mysql.driver',
'database.connections.mysql.url','database.connections.mysql.host','database.connections.mysql.port','database.connections.mysql.database','database.connections.mysql.username',
'database.connections.mysql.password','database.connections.mysql.unix_socket','database.connections.mysql.charset','database.connections.mysql.collation','database.connections.mysql.prefix',
'database.connections.mysql.prefix_indexes','database.connections.mysql.strict','database.connections.mysql.engine','database.connections.mysql.options','database.connections.mariadb.driver',
'database.connections.mariadb.url','database.connections.mariadb.host','database.connections.mariadb.port','database.connections.mariadb.database','database.connections.mariadb.username',
'database.connections.mariadb.password','database.connections.mariadb.unix_socket','database.connections.mariadb.charset','database.connections.mariadb.collation','database.connections.mariadb.prefix',
'database.connections.mariadb.prefix_indexes','database.connections.mariadb.strict','database.connections.mariadb.engine','database.connections.mariadb.options','database.connections.pgsql.driver',
'database.connections.pgsql.url','database.connections.pgsql.host','database.connections.pgsql.port','database.connections.pgsql.database','database.connections.pgsql.username',
'database.connections.pgsql.password','database.connections.pgsql.charset','database.connections.pgsql.prefix','database.connections.pgsql.prefix_indexes','database.connections.pgsql.search_path',
'database.connections.pgsql.sslmode','database.connections.sqlsrv.driver','database.connections.sqlsrv.url','database.connections.sqlsrv.host','database.connections.sqlsrv.port',
'database.connections.sqlsrv.database','database.connections.sqlsrv.username','database.connections.sqlsrv.password','database.connections.sqlsrv.charset','database.connections.sqlsrv.prefix',
'database.connections.sqlsrv.prefix_indexes','database.connections.krang_db.driver','database.connections.krang_db.host','database.connections.krang_db.port','database.connections.krang_db.database',
'database.connections.krang_db.username','database.connections.krang_db.password','database.connections.krang_db.charset','database.connections.krang_db.collation','database.connections.krang_db.prefix',
'database.connections.krang_db.strict','database.connections.krang_db.engine','database.migrations','database.redis.client','database.redis.options.cluster',
'database.redis.options.prefix','database.redis.options.persistent','database.redis.default.url','database.redis.default.host','database.redis.default.username',
'database.redis.default.password','database.redis.default.port','database.redis.default.database','database.redis.cache.url','database.redis.cache.host',
'database.redis.cache.username','database.redis.cache.password','database.redis.cache.port','database.redis.cache.database','filesystems.default',
'filesystems.disks.local.driver','filesystems.disks.local.root','filesystems.disks.local.throw','filesystems.disks.public.driver','filesystems.disks.public.root',
'filesystems.disks.public.url','filesystems.disks.public.visibility','filesystems.disks.public.throw','filesystems.disks.s3.driver','filesystems.disks.s3.key',
'filesystems.disks.s3.secret','filesystems.disks.s3.region','filesystems.disks.s3.bucket','filesystems.disks.s3.url','filesystems.disks.s3.endpoint',
'filesystems.disks.s3.use_path_style_endpoint','filesystems.disks.s3.throw','filesystems.links.C:\\Users\\idawo\\Herd\\pso-services\\public\\storage','geocoder.key','geocoder.language',
'geocoder.region','geocoder.bounds','geocoder.country','googlemaps.key','googlemaps.ssl_verify_peer',
'googlemaps.service.geocoding.url','googlemaps.service.geocoding.type','googlemaps.service.geocoding.key','googlemaps.service.geocoding.endpoint','googlemaps.service.geocoding.responseDefaultKey',
'googlemaps.service.geocoding.param.address','googlemaps.service.geocoding.param.bounds','googlemaps.service.geocoding.param.key','googlemaps.service.geocoding.param.region','googlemaps.service.geocoding.param.language',
'googlemaps.service.geocoding.param.result_type','googlemaps.service.geocoding.param.location_type','googlemaps.service.geocoding.param.latlng','googlemaps.service.geocoding.param.place_id','googlemaps.service.geocoding.param.components.route',
'googlemaps.service.geocoding.param.components.locality','googlemaps.service.geocoding.param.components.administrative_area','googlemaps.service.geocoding.param.components.postal_code','googlemaps.service.geocoding.param.components.country','googlemaps.service.directions.url',
'googlemaps.service.directions.type','googlemaps.service.directions.key','googlemaps.service.directions.endpoint','googlemaps.service.directions.responseDefaultKey','googlemaps.service.directions.decodePolyline',
'googlemaps.service.directions.param.origin','googlemaps.service.directions.param.destination','googlemaps.service.directions.param.mode','googlemaps.service.directions.param.waypoints','googlemaps.service.directions.param.place_id',
'googlemaps.service.directions.param.alternatives','googlemaps.service.directions.param.avoid','googlemaps.service.directions.param.language','googlemaps.service.directions.param.units','googlemaps.service.directions.param.region',
'googlemaps.service.directions.param.departure_time','googlemaps.service.directions.param.arrival_time','googlemaps.service.directions.param.transit_mode','googlemaps.service.directions.param.transit_routing_preference','googlemaps.service.distancematrix.url',
'googlemaps.service.distancematrix.type','googlemaps.service.distancematrix.key','googlemaps.service.distancematrix.endpoint','googlemaps.service.distancematrix.responseDefaultKey','googlemaps.service.distancematrix.param.origins',
'googlemaps.service.distancematrix.param.destinations','googlemaps.service.distancematrix.param.key','googlemaps.service.distancematrix.param.mode','googlemaps.service.distancematrix.param.language','googlemaps.service.distancematrix.param.avoid',
'googlemaps.service.distancematrix.param.units','googlemaps.service.distancematrix.param.departure_time','googlemaps.service.distancematrix.param.arrival_time','googlemaps.service.distancematrix.param.transit_mode','googlemaps.service.distancematrix.param.transit_routing_preference',
'googlemaps.service.elevation.url','googlemaps.service.elevation.type','googlemaps.service.elevation.key','googlemaps.service.elevation.endpoint','googlemaps.service.elevation.responseDefaultKey',
'googlemaps.service.elevation.param.locations','googlemaps.service.elevation.param.path','googlemaps.service.elevation.param.samples','googlemaps.service.elevation.param.key','googlemaps.service.geolocate.url',
'googlemaps.service.geolocate.type','googlemaps.service.geolocate.key','googlemaps.service.geolocate.endpoint','googlemaps.service.geolocate.responseDefaultKey','googlemaps.service.geolocate.param.homeMobileCountryCode',
'googlemaps.service.geolocate.param.homeMobileNetworkCode','googlemaps.service.geolocate.param.radioType','googlemaps.service.geolocate.param.carrier','googlemaps.service.geolocate.param.considerIp','googlemaps.service.geolocate.param.cellTowers.cellId',
'googlemaps.service.geolocate.param.cellTowers.locationAreaCode','googlemaps.service.geolocate.param.cellTowers.mobileCountryCode','googlemaps.service.geolocate.param.cellTowers.mobileNetworkCode','googlemaps.service.geolocate.param.cellTowers.age','googlemaps.service.geolocate.param.cellTowers.signalStrength',
'googlemaps.service.geolocate.param.cellTowers.timingAdvance','googlemaps.service.geolocate.param.wifiAccessPoints.macAddress','googlemaps.service.geolocate.param.wifiAccessPoints.signalStrength','googlemaps.service.geolocate.param.wifiAccessPoints.age','googlemaps.service.geolocate.param.wifiAccessPoints.channel',
'googlemaps.service.geolocate.param.wifiAccessPoints.signalToNoiseRatio','googlemaps.service.snapToRoads.url','googlemaps.service.snapToRoads.type','googlemaps.service.snapToRoads.key','googlemaps.service.snapToRoads.endpoint',
'googlemaps.service.snapToRoads.responseDefaultKey','googlemaps.service.snapToRoads.param.locations','googlemaps.service.snapToRoads.param.path','googlemaps.service.snapToRoads.param.samples','googlemaps.service.snapToRoads.param.key',
'googlemaps.service.speedLimits.url','googlemaps.service.speedLimits.type','googlemaps.service.speedLimits.key','googlemaps.service.speedLimits.endpoint','googlemaps.service.speedLimits.responseDefaultKey',
'googlemaps.service.speedLimits.param.path','googlemaps.service.speedLimits.param.placeId','googlemaps.service.speedLimits.param.units','googlemaps.service.speedLimits.param.key','googlemaps.service.timezone.url',
'googlemaps.service.timezone.type','googlemaps.service.timezone.key','googlemaps.service.timezone.endpoint','googlemaps.service.timezone.responseDefaultKey','googlemaps.service.timezone.param.location',
'googlemaps.service.timezone.param.timestamp','googlemaps.service.timezone.param.key','googlemaps.service.timezone.param.language','googlemaps.service.nearbysearch.url','googlemaps.service.nearbysearch.type',
'googlemaps.service.nearbysearch.key','googlemaps.service.nearbysearch.endpoint','googlemaps.service.nearbysearch.responseDefaultKey','googlemaps.service.nearbysearch.param.key','googlemaps.service.nearbysearch.param.location',
'googlemaps.service.nearbysearch.param.radius','googlemaps.service.nearbysearch.param.keyword','googlemaps.service.nearbysearch.param.language','googlemaps.service.nearbysearch.param.minprice','googlemaps.service.nearbysearch.param.maxprice',
'googlemaps.service.nearbysearch.param.name','googlemaps.service.nearbysearch.param.opennow','googlemaps.service.nearbysearch.param.rankby','googlemaps.service.nearbysearch.param.type','googlemaps.service.nearbysearch.param.pagetoken',
'googlemaps.service.nearbysearch.param.zagatselected','googlemaps.service.textsearch.url','googlemaps.service.textsearch.type','googlemaps.service.textsearch.key','googlemaps.service.textsearch.endpoint',
'googlemaps.service.textsearch.responseDefaultKey','googlemaps.service.textsearch.param.key','googlemaps.service.textsearch.param.query','googlemaps.service.textsearch.param.location','googlemaps.service.textsearch.param.radius',
'googlemaps.service.textsearch.param.language','googlemaps.service.textsearch.param.minprice','googlemaps.service.textsearch.param.maxprice','googlemaps.service.textsearch.param.opennow','googlemaps.service.textsearch.param.type',
'googlemaps.service.textsearch.param.pagetoken','googlemaps.service.textsearch.param.zagatselected','googlemaps.service.radarsearch.url','googlemaps.service.radarsearch.type','googlemaps.service.radarsearch.key',
'googlemaps.service.radarsearch.endpoint','googlemaps.service.radarsearch.responseDefaultKey','googlemaps.service.radarsearch.param.key','googlemaps.service.radarsearch.param.radius','googlemaps.service.radarsearch.param.location',
'googlemaps.service.radarsearch.param.keyword','googlemaps.service.radarsearch.param.minprice','googlemaps.service.radarsearch.param.maxprice','googlemaps.service.radarsearch.param.opennow','googlemaps.service.radarsearch.param.name',
'googlemaps.service.radarsearch.param.type','googlemaps.service.radarsearch.param.zagatselected','googlemaps.service.placedetails.url','googlemaps.service.placedetails.type','googlemaps.service.placedetails.key',
'googlemaps.service.placedetails.endpoint','googlemaps.service.placedetails.responseDefaultKey','googlemaps.service.placedetails.param.key','googlemaps.service.placedetails.param.placeid','googlemaps.service.placedetails.param.extensions',
'googlemaps.service.placedetails.param.language','googlemaps.service.placeadd.url','googlemaps.service.placeadd.type','googlemaps.service.placeadd.key','googlemaps.service.placeadd.endpoint',
'googlemaps.service.placeadd.responseDefaultKey','googlemaps.service.placeadd.param.key','googlemaps.service.placeadd.param.accuracy','googlemaps.service.placeadd.param.address','googlemaps.service.placeadd.param.language',
'googlemaps.service.placeadd.param.location','googlemaps.service.placeadd.param.name','googlemaps.service.placeadd.param.phone_number','googlemaps.service.placeadd.param.types','googlemaps.service.placeadd.param.type',
'googlemaps.service.placeadd.param.website','googlemaps.service.placedelete.url','googlemaps.service.placedelete.type','googlemaps.service.placedelete.key','googlemaps.service.placedelete.endpoint',
'googlemaps.service.placedelete.responseDefaultKey','googlemaps.service.placedelete.param.key','googlemaps.service.placedelete.param.place_id','googlemaps.service.placephoto.url','googlemaps.service.placephoto.type',
'googlemaps.service.placephoto.key','googlemaps.service.placephoto.endpoint','googlemaps.service.placephoto.responseDefaultKey','googlemaps.service.placephoto.param.key','googlemaps.service.placephoto.param.photoreference',
'googlemaps.service.placephoto.param.maxheight','googlemaps.service.placephoto.param.maxwidth','googlemaps.service.placeautocomplete.url','googlemaps.service.placeautocomplete.type','googlemaps.service.placeautocomplete.key',
'googlemaps.service.placeautocomplete.endpoint','googlemaps.service.placeautocomplete.responseDefaultKey','googlemaps.service.placeautocomplete.param.key','googlemaps.service.placeautocomplete.param.input','googlemaps.service.placeautocomplete.param.offset',
'googlemaps.service.placeautocomplete.param.location','googlemaps.service.placeautocomplete.param.radius','googlemaps.service.placeautocomplete.param.language','googlemaps.service.placeautocomplete.param.types','googlemaps.service.placeautocomplete.param.type',
'googlemaps.service.placeautocomplete.param.components','googlemaps.service.placequeryautocomplete.url','googlemaps.service.placequeryautocomplete.type','googlemaps.service.placequeryautocomplete.key','googlemaps.service.placequeryautocomplete.endpoint',
'googlemaps.service.placequeryautocomplete.responseDefaultKey','googlemaps.service.placequeryautocomplete.param.key','googlemaps.service.placequeryautocomplete.param.input','googlemaps.service.placequeryautocomplete.param.offset','googlemaps.service.placequeryautocomplete.param.location',
'googlemaps.service.placequeryautocomplete.param.radius','googlemaps.service.placequeryautocomplete.param.language','googlemaps.endpoint.xml','googlemaps.endpoint.json','hashing.driver',
'hashing.bcrypt.rounds','hashing.argon.memory','hashing.argon.threads','hashing.argon.time','hashing.rehash_on_login',
'logging.default','logging.deprecations.channel','logging.deprecations.trace','logging.channels.stack.driver','logging.channels.stack.channels',
'logging.channels.stack.ignore_exceptions','logging.channels.single.driver','logging.channels.single.path','logging.channels.single.level','logging.channels.daily.driver',
'logging.channels.daily.path','logging.channels.daily.level','logging.channels.daily.days','logging.channels.slack.driver','logging.channels.slack.url',
'logging.channels.slack.username','logging.channels.slack.emoji','logging.channels.slack.level','logging.channels.papertrail.driver','logging.channels.papertrail.level',
'logging.channels.papertrail.handler','logging.channels.papertrail.handler_with.host','logging.channels.papertrail.handler_with.port','logging.channels.papertrail.handler_with.connectionString','logging.channels.stderr.driver',
'logging.channels.stderr.level','logging.channels.stderr.handler','logging.channels.stderr.formatter','logging.channels.stderr.with.stream','logging.channels.syslog.driver',
'logging.channels.syslog.level','logging.channels.errorlog.driver','logging.channels.errorlog.level','logging.channels.null.driver','logging.channels.null.handler',
'logging.channels.emergency.path','logging.channels.nightwatch.driver','logging.channels.nightwatch.via','logging.channels.nightwatch.level','pso-services.statuses.statuses_greater_than_alloc.allocated',
'pso-services.statuses.statuses_greater_than_alloc.committed','pso-services.statuses.statuses_greater_than_alloc.sent','pso-services.statuses.statuses_greater_than_alloc.downloaded','pso-services.statuses.statuses_greater_than_alloc.accepted','pso-services.statuses.statuses_greater_than_alloc.travelling',
'pso-services.statuses.statuses_greater_than_alloc.waiting','pso-services.statuses.statuses_greater_than_alloc.onsite','pso-services.statuses.statuses_greater_than_alloc.pendingcompletion','pso-services.statuses.statuses_greater_than_alloc.visitcomplete','pso-services.statuses.statuses_greater_than_alloc.completed',
'pso-services.statuses.statuses_greater_than_alloc.incomplete','pso-services.statuses.all.unallocated','pso-services.statuses.all.allocated','pso-services.statuses.all.committed','pso-services.statuses.all.sent',
'pso-services.statuses.all.downloaded','pso-services.statuses.all.accepted','pso-services.statuses.all.travelling','pso-services.statuses.all.waiting','pso-services.statuses.all.onsite',
'pso-services.statuses.all.pendingcompletion','pso-services.statuses.all.visitcomplete','pso-services.statuses.all.completed','pso-services.statuses.all.incomplete','pso-services.statuses.commit_status',
'pso-services.defaults.activity.base_value','pso-services.defaults.activity.priority','pso-services.defaults.activity.appointment_template_duration','pso-services.defaults.activity.class_id','pso-services.defaults.activity.split_allowed',
'pso-services.defaults.activity.appointment_booking_suffix','pso-services.defaults.resource.class_id','pso-services.defaults.process_type','pso-services.defaults.timeout','pso-services.defaults.do_on_location_incentive',
'pso-services.defaults.do_in_locality_incentive','pso-services.defaults.timezone','pso-services.defaults.travel_broadcast_api','pso-services.defaults.travel_broadcast_timeout_minutes','pso-services.debug.webhook_uuid',
'pso-services.debug.base_url','pso-services.debug.username','pso-services.debug.password','pso-services.debug.dataset_id','pso-services.debug.account_id',
'pso-services.debug.debug_mode_on','pso-services.debug.debug_timeout','pso-services.settings.validate_object_existence','pso-services.settings.enable_commit_service_log','pso-services.settings.enable_swb_response_service_log',
'pso-services.settings.service_name','pso-services.settings.use_system_date_format','pso-services.settings.fix_committed_activities','pso-services.settings.override_commit_timestamps','pso-services.settings.override_commit_timestamp_value',
'pso-services.settings.enable_debug','pso-services.settings.force_appointed_check','pso-services.settings.use_region_as_locality','pso-services.settings.google_key','pso-services.settings.shared_encryption_key',
'queue.default','queue.connections.sync.driver','queue.connections.database.driver','queue.connections.database.table','queue.connections.database.queue',
'queue.connections.database.retry_after','queue.connections.database.after_commit','queue.connections.beanstalkd.driver','queue.connections.beanstalkd.host','queue.connections.beanstalkd.queue',
'queue.connections.beanstalkd.retry_after','queue.connections.beanstalkd.block_for','queue.connections.beanstalkd.after_commit','queue.connections.sqs.driver','queue.connections.sqs.key',
'queue.connections.sqs.secret','queue.connections.sqs.prefix','queue.connections.sqs.queue','queue.connections.sqs.suffix','queue.connections.sqs.region',
'queue.connections.sqs.after_commit','queue.connections.redis.driver','queue.connections.redis.connection','queue.connections.redis.queue','queue.connections.redis.retry_after',
'queue.connections.redis.block_for','queue.connections.redis.after_commit','queue.batching.database','queue.batching.table','queue.failed.driver',
'queue.failed.database','queue.failed.table','sanctum.stateful','sanctum.guard','sanctum.expiration',
'sanctum.token_prefix','sanctum.middleware.authenticate_session','sanctum.middleware.encrypt_cookies','sanctum.middleware.validate_csrf_token','scramble.api_path',
'scramble.api_domain','scramble.export_path','scramble.info.version','scramble.info.description','scramble.ui.title',
'scramble.ui.theme','scramble.ui.hide_try_it','scramble.ui.hide_schemas','scramble.ui.logo','scramble.ui.try_it_credentials_policy',
'scramble.ui.layout','scramble.servers','scramble.enum_cases_description_strategy','scramble.middleware','scramble.extensions',
'sentry.dsn','sentry.release','sentry.environment','sentry.breadcrumbs.logs','sentry.breadcrumbs.sql_queries',
'sentry.breadcrumbs.sql_bindings','sentry.breadcrumbs.queue_info','sentry.breadcrumbs.command_info','sentry.tracing.queue_job_transactions','sentry.tracing.queue_jobs',
'sentry.tracing.sql_queries','sentry.tracing.sql_origin','sentry.tracing.views','sentry.tracing.default_integrations','sentry.tracing.missing_routes',
'sentry.send_default_pii','sentry.traces_sample_rate','services.postmark.token','services.resend.key','services.ses.key',
'services.ses.secret','services.ses.region','services.slack.notifications.bot_user_oauth_token','services.slack.notifications.channel','services.mailgun.domain',
'services.mailgun.secret','services.mailgun.endpoint','services.mailgun.scheme','session.driver','session.lifetime',
'session.expire_on_close','session.encrypt','session.files','session.connection','session.table',
'session.store','session.lottery','session.cookie','session.path','session.domain',
'session.secure','session.http_only','session.same_site','session.partitioned','telescope.domain',
'telescope.path','telescope.driver','telescope.storage.database.connection','telescope.storage.database.chunk','telescope.enabled',
'telescope.middleware','telescope.only_paths','telescope.ignore_paths','telescope.ignore_commands','telescope.watchers.Laravel\\Telescope\\Watchers\\BatchWatcher',
'telescope.watchers.Laravel\\Telescope\\Watchers\\CacheWatcher.enabled','telescope.watchers.Laravel\\Telescope\\Watchers\\CacheWatcher.hidden','telescope.watchers.Laravel\\Telescope\\Watchers\\ClientRequestWatcher','telescope.watchers.Laravel\\Telescope\\Watchers\\CommandWatcher.enabled','telescope.watchers.Laravel\\Telescope\\Watchers\\CommandWatcher.ignore',
'telescope.watchers.Laravel\\Telescope\\Watchers\\DumpWatcher.enabled','telescope.watchers.Laravel\\Telescope\\Watchers\\DumpWatcher.always','telescope.watchers.Laravel\\Telescope\\Watchers\\EventWatcher.enabled','telescope.watchers.Laravel\\Telescope\\Watchers\\EventWatcher.ignore','telescope.watchers.Laravel\\Telescope\\Watchers\\ExceptionWatcher',
'telescope.watchers.Laravel\\Telescope\\Watchers\\GateWatcher.enabled','telescope.watchers.Laravel\\Telescope\\Watchers\\GateWatcher.ignore_abilities','telescope.watchers.Laravel\\Telescope\\Watchers\\GateWatcher.ignore_packages','telescope.watchers.Laravel\\Telescope\\Watchers\\JobWatcher','telescope.watchers.Laravel\\Telescope\\Watchers\\LogWatcher',
'telescope.watchers.Laravel\\Telescope\\Watchers\\MailWatcher','telescope.watchers.Laravel\\Telescope\\Watchers\\ModelWatcher.enabled','telescope.watchers.Laravel\\Telescope\\Watchers\\ModelWatcher.events','telescope.watchers.Laravel\\Telescope\\Watchers\\ModelWatcher.hydrations','telescope.watchers.Laravel\\Telescope\\Watchers\\NotificationWatcher',
'telescope.watchers.Laravel\\Telescope\\Watchers\\QueryWatcher.enabled','telescope.watchers.Laravel\\Telescope\\Watchers\\QueryWatcher.ignore_packages','telescope.watchers.Laravel\\Telescope\\Watchers\\QueryWatcher.slow','telescope.watchers.Laravel\\Telescope\\Watchers\\RedisWatcher','telescope.watchers.Laravel\\Telescope\\Watchers\\RequestWatcher.enabled',
'telescope.watchers.Laravel\\Telescope\\Watchers\\RequestWatcher.size_limit','telescope.watchers.Laravel\\Telescope\\Watchers\\RequestWatcher.ignore_http_methods','telescope.watchers.Laravel\\Telescope\\Watchers\\RequestWatcher.ignore_status_codes','telescope.watchers.Laravel\\Telescope\\Watchers\\ScheduleWatcher','telescope.watchers.Laravel\\Telescope\\Watchers\\ViewWatcher',
'view.paths','view.compiled','broadcasting.default','broadcasting.connections.reverb.driver','broadcasting.connections.reverb.key',
'broadcasting.connections.reverb.secret','broadcasting.connections.reverb.app_id','broadcasting.connections.reverb.options.host','broadcasting.connections.reverb.options.port','broadcasting.connections.reverb.options.scheme',
'broadcasting.connections.reverb.options.useTLS','broadcasting.connections.reverb.client_options','broadcasting.connections.pusher.driver','broadcasting.connections.pusher.key','broadcasting.connections.pusher.secret',
'broadcasting.connections.pusher.app_id','broadcasting.connections.pusher.options.cluster','broadcasting.connections.pusher.options.host','broadcasting.connections.pusher.options.port','broadcasting.connections.pusher.options.scheme',
'broadcasting.connections.pusher.options.encrypted','broadcasting.connections.pusher.options.useTLS','broadcasting.connections.pusher.client_options','broadcasting.connections.ably.driver','broadcasting.connections.ably.key',
'broadcasting.connections.log.driver','broadcasting.connections.null.driver','concurrency.default','mail.default','mail.mailers.smtp.transport',
'mail.mailers.smtp.scheme','mail.mailers.smtp.url','mail.mailers.smtp.host','mail.mailers.smtp.port','mail.mailers.smtp.username',
'mail.mailers.smtp.password','mail.mailers.smtp.timeout','mail.mailers.smtp.local_domain','mail.mailers.ses.transport','mail.mailers.postmark.transport',
'mail.mailers.resend.transport','mail.mailers.sendmail.transport','mail.mailers.sendmail.path','mail.mailers.log.transport','mail.mailers.log.channel',
'mail.mailers.array.transport','mail.mailers.failover.transport','mail.mailers.failover.mailers','mail.mailers.failover.retry_after','mail.mailers.roundrobin.transport',
'mail.mailers.roundrobin.mailers','mail.mailers.roundrobin.retry_after','mail.from.address','mail.from.name','mail.markdown.theme',
'mail.markdown.paths','nightwatch.enabled','nightwatch.token','nightwatch.deployment','nightwatch.server',
'nightwatch.sampling.requests','nightwatch.sampling.commands','nightwatch.sampling.exceptions','nightwatch.filtering.ignore_cache_events','nightwatch.filtering.ignore_mail',
'nightwatch.filtering.ignore_notifications','nightwatch.filtering.ignore_outgoing_requests','nightwatch.filtering.ignore_queries','nightwatch.filtering.log_level','nightwatch.ingest.uri',
'nightwatch.ingest.timeout','nightwatch.ingest.connection_timeout','nightwatch.ingest.event_buffer','ide-helper.filename','ide-helper.models_filename',
'ide-helper.meta_filename','ide-helper.include_fluent','ide-helper.include_factory_builders','ide-helper.write_model_magic_where','ide-helper.write_model_external_builder_methods',
'ide-helper.write_model_relation_count_properties','ide-helper.write_eloquent_model_mixins','ide-helper.include_helpers','ide-helper.helper_files','ide-helper.model_locations',
'ide-helper.ignored_models','ide-helper.model_hooks','ide-helper.extra.Eloquent','ide-helper.extra.Session','ide-helper.magic',
'ide-helper.interfaces','ide-helper.model_camel_case_properties','ide-helper.type_overrides.integer','ide-helper.type_overrides.boolean','ide-helper.include_class_docblocks',
'ide-helper.force_fqn','ide-helper.use_generics_annotations','ide-helper.additional_relation_types','ide-helper.additional_relation_return_types','ide-helper.enforce_nullable_relationships',
'ide-helper.post_migrate','ide-helper.macroable_traits','tinker.commands','tinker.alias','tinker.dont_alias',);
        registerArgumentsSet('middleware', 
'web','api','auth','auth.basic','auth.session',
'cache.headers','can','guest','password.confirm','precognitive',
'signed','throttle','verified','abilities','ability',);
        registerArgumentsSet('routes', 
'sanctum.csrf-cookie','travelanalyzer.update','travel.analyzer.show','scramble.docs.ui','scramble.docs.document',);
        registerArgumentsSet('views', 
'laravel-exceptions-renderer::components.card','laravel-exceptions-renderer::components.context','laravel-exceptions-renderer::components.editor','laravel-exceptions-renderer::components.header','laravel-exceptions-renderer::components.icons.chevron-down',
'laravel-exceptions-renderer::components.icons.chevron-up','laravel-exceptions-renderer::components.icons.computer-desktop','laravel-exceptions-renderer::components.icons.moon','laravel-exceptions-renderer::components.icons.sun','laravel-exceptions-renderer::components.layout',
'laravel-exceptions-renderer::components.navigation','laravel-exceptions-renderer::components.theme-switcher','laravel-exceptions-renderer::components.trace','laravel-exceptions-renderer::components.trace-and-editor','laravel-exceptions-renderer::show',
'laravel-exceptions::401','laravel-exceptions::402','laravel-exceptions::403','laravel-exceptions::404','laravel-exceptions::419',
'laravel-exceptions::429','laravel-exceptions::500','laravel-exceptions::503','laravel-exceptions::layout','laravel-exceptions::minimal',
'notifications::email','pagination::bootstrap-4','pagination::bootstrap-5','pagination::default','pagination::semantic-ui',
'pagination::simple-bootstrap-4','pagination::simple-bootstrap-5','pagination::simple-default','pagination::simple-tailwind','pagination::tailwind',
'scramble::docs',);
        registerArgumentsSet('translations', 
'auth.failed','auth.password','auth.throttle','pagination.previous','pagination.next',
'passwords.reset','passwords.sent','passwords.throttled','passwords.token','passwords.user',
'validation.accepted','validation.accepted_if','validation.active_url','validation.after','validation.after_or_equal',
'validation.alpha','validation.alpha_dash','validation.alpha_num','validation.any_of','validation.array',
'validation.ascii','validation.before','validation.before_or_equal','validation.between.array','validation.between.file',
'validation.between.numeric','validation.between.string','validation.boolean','validation.can','validation.confirmed',
'validation.contains','validation.current_password','validation.date','validation.date_equals','validation.date_format',
'validation.decimal','validation.declined','validation.declined_if','validation.different','validation.digits',
'validation.digits_between','validation.dimensions','validation.distinct','validation.doesnt_end_with','validation.doesnt_start_with',
'validation.email','validation.ends_with','validation.enum','validation.exists','validation.extensions',
'validation.file','validation.filled','validation.gt.array','validation.gt.file','validation.gt.numeric',
'validation.gt.string','validation.gte.array','validation.gte.file','validation.gte.numeric','validation.gte.string',
'validation.hex_color','validation.image','validation.in','validation.in_array','validation.in_array_keys',
'validation.integer','validation.ip','validation.ipv4','validation.ipv6','validation.json',
'validation.list','validation.lowercase','validation.lt.array','validation.lt.file','validation.lt.numeric',
'validation.lt.string','validation.lte.array','validation.lte.file','validation.lte.numeric','validation.lte.string',
'validation.mac_address','validation.max.array','validation.max.file','validation.max.numeric','validation.max.string',
'validation.max_digits','validation.mimes','validation.mimetypes','validation.min.array','validation.min.file',
'validation.min.numeric','validation.min.string','validation.min_digits','validation.missing','validation.missing_if',
'validation.missing_unless','validation.missing_with','validation.missing_with_all','validation.multiple_of','validation.not_in',
'validation.not_regex','validation.numeric','validation.password.letters','validation.password.mixed','validation.password.numbers',
'validation.password.symbols','validation.password.uncompromised','validation.present','validation.present_if','validation.present_unless',
'validation.present_with','validation.present_with_all','validation.prohibited','validation.prohibited_if','validation.prohibited_if_accepted',
'validation.prohibited_if_declined','validation.prohibited_unless','validation.prohibits','validation.regex','validation.required',
'validation.required_array_keys','validation.required_if','validation.required_if_accepted','validation.required_if_declined','validation.required_unless',
'validation.required_with','validation.required_with_all','validation.required_without','validation.required_without_all','validation.same',
'validation.size.array','validation.size.file','validation.size.numeric','validation.size.string','validation.starts_with',
'validation.string','validation.timezone','validation.unique','validation.uploaded','validation.uppercase',
'validation.url','validation.ulid','validation.uuid','validation.custom.attribute-name.rule-name','validation.custom.base_url.not_regex',
'validation.custom.token.required','validation.attributes.shift_id','validation.attributes.resource_id','validation.attributes.dataset_id','validation.attributes.rota_id',
'validation.attributes.shift_type','validation.attributes.turn_manual_scheduling_on','validation.attributes.token','validation.attributes.sla_type','validation.attributes.dse_duration',
'validation.attributes.modelling_dataset_id','notifications.0',);
        registerArgumentsSet('env', 
'APP_NAME','APP_ENV','APP_KEY','APP_DEBUG','APP_URL',
'LOG_CHANNEL','LOG_DEPRECATIONS_CHANNEL','LOG_LEVEL','DB_CONNECTION','DB_HOST',
'DB_PORT','DB_DATABASE','DB_USERNAME','DB_PASSWORD','BROADCAST_DRIVER',
'CACHE_DRIVER','FILESYSTEM_DISK','QUEUE_CONNECTION','SESSION_DRIVER','SESSION_LIFETIME',
'MEMCACHED_HOST','REDIS_HOST','REDIS_PASSWORD','REDIS_PORT','MAIL_MAILER',
'MAIL_HOST','MAIL_PORT','MAIL_USERNAME','MAIL_PASSWORD','MAIL_ENCRYPTION',
'MAIL_FROM_ADDRESS','MAIL_FROM_NAME','AWS_ACCESS_KEY_ID','AWS_SECRET_ACCESS_KEY','AWS_DEFAULT_REGION',
'AWS_BUCKET','AWS_USE_PATH_STYLE_ENDPOINT','PUSHER_APP_ID','PUSHER_APP_KEY','PUSHER_APP_SECRET',
'PUSHER_HOST','PUSHER_PORT','PUSHER_SCHEME','PUSHER_APP_CLUSTER','VITE_PUSHER_APP_KEY',
'VITE_PUSHER_HOST','VITE_PUSHER_PORT','VITE_PUSHER_SCHEME','VITE_PUSHER_APP_CLUSTER','GOOGLE_MAPS_API_KEY',
'KRANG_DB_HOST','KRANG_DB_PASSWORD','KRANG_DB_DRIVER','KRANG_DB_PORT','KRANG_DB_DATABASE',
'KRANG_DB_USERNAME','SHREDDER_KEY',);
        
                expectedArguments(\Illuminate\Support\Facades\Gate::has(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::allows(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::denies(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::check(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::any(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::none(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::authorize(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Gate::inspect(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Support\Facades\Route::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Route::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Route::cant(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Support\Facades\Auth::cant(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::can(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::cannot(), 0, argumentsSet('auth'));
    expectedArguments(\Illuminate\Foundation\Auth\Access\Authorizable::cant(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Contracts\Auth\Access\Authorizable::can(), 0, argumentsSet('auth'));
                expectedArguments(\Illuminate\Config\Repository::getMany(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::set(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::string(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::integer(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::boolean(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::float(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::array(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::prepend(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Config\Repository::push(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::getMany(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::set(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::string(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::integer(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::boolean(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::float(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::array(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::prepend(), 0, argumentsSet('configs'));
    expectedArguments(\Illuminate\Support\Facades\Config::push(), 0, argumentsSet('configs'));
                expectedArguments(\Illuminate\Support\Facades\Route::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Support\Facades\Route::withoutMiddleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Routing\Router::middleware(), 0, argumentsSet('middleware'));
    expectedArguments(\Illuminate\Routing\Router::withoutMiddleware(), 0, argumentsSet('middleware'));
                expectedArguments(\route(), 0, argumentsSet('routes'));
    expectedArguments(\to_route(), 0, argumentsSet('routes'));
    expectedArguments(\signedRoute(), 0, argumentsSet('routes'));
                expectedArguments(\Illuminate\Support\Facades\Redirect::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\Redirect::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\Redirect::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Support\Facades\URL::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\Redirector::temporarySignedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::route(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::signedRoute(), 0, argumentsSet('routes'));
    expectedArguments(\Illuminate\Routing\UrlGenerator::temporarySignedRoute(), 0, argumentsSet('routes'));
                expectedArguments(\view(), 0, argumentsSet('views'));
                expectedArguments(\Illuminate\Support\Facades\View::make(), 0, argumentsSet('views'));
    expectedArguments(\Illuminate\View\Factory::make(), 0, argumentsSet('views'));
                expectedArguments(\__(), 0, argumentsSet('translations'));
    expectedArguments(\trans(), 0, argumentsSet('translations'));
                expectedArguments(\Illuminate\Contracts\Translation\Translator::get(), 0, argumentsSet('translations'));
                expectedArguments(\env(), 0, argumentsSet('env'));
                expectedArguments(\Illuminate\Support\Env::get(), 0, argumentsSet('env'));
            
}
